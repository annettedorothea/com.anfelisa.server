
com.anfelisa.test

target JAVA

models {
	schema public
	persistent Test {
		primitiveAttributes {
			Unique PrimaryKey NotNull Serial testId
			NotNull String name
			Integer sequence
			NotNull Integer lessonId references com.anfelisa.lesson.Lesson.lessonId
			NotNull String html
			NotNull String author references com.anfelisa.user.User.username
		}
	}

	TestId {
		primitiveAttributes {
			NotNull Integer testId
		}
		
	} 

	MyTest {
		primitiveAttributes {
			NotNull Serial testId
			NotNull String name
			Integer sequence
			Integer resultCount
			Boolean hasResults
		}
		complexAttributes {
			List com.anfelisa.result.ResultAbstract resultAbstractList
		}
		
	} 
	
	TestList {
		complexAttributes {
			List Test testList
		}
	}
	
	MyTestList {
		complexAttributes {
			List MyTest myTestList
		} 
	}
	
	CardContentHashList {
		primitiveAttributes {
			List Integer contentHashList
		}
	}
}

data {
	TestCreation : ( Test )
	TestList : (TestList com.anfelisa.lesson.LessonId com.anfelisa.lesson.LessonAbstract com.anfelisa.course.CourseAbstract)
	SimpleTestList : (TestList com.anfelisa.lesson.LessonId)
	Test : ( Test com.anfelisa.lesson.LessonId com.anfelisa.lesson.LessonAbstract com.anfelisa.course.CourseAbstract TestList) 
	MyTestList : (MyTestList com.anfelisa.lesson.LessonId com.anfelisa.user.Username com.anfelisa.lesson.LessonAbstract com.anfelisa.course.CourseAbstract)
	MyTest : ( Test com.anfelisa.lesson.LessonId com.anfelisa.user.Username com.anfelisa.lesson.LessonAbstract com.anfelisa.course.CourseAbstract MyTestList) 
	CardContentHashList : (CardContentHashList TestId)
	TestId : (TestId)
}

actions {
	POST CreateTest uses TestCreation executes CreateTest
	GET LoadPublicTests uses TestList
	GET LoadPublicTest uses Test
	GET LoadPrivateTests uses MyTestList
	GET LoadPrivateTest uses MyTest
	GET GetTest uses TestCreation
	PUT UpdateTest uses TestCreation executes UpdateTest
	GET GetCardsOfTest uses CardContentHashList
	GET GetAllTests uses SimpleTestList
	DELETE DeleteTest uses TestId executes DeleteTest
}

commands {
	CreateTest uses TestCreation {
		on created publishes ( TestCreated )
	}
	UpdateTest uses TestCreation {
		on updated publishes (TestUpdated)
	}
	DeleteTest uses TestId {
		on deleted publishes (TestDeleted)
	}
}

events {
	TestCreated uses TestCreation listenedToBy ( Test.createTest )
	TestUpdated uses TestCreation listenedToBy (Test.updateTest)
	TestDeleted uses TestId listenedToBy (Test.deleteTest)
}

views {
	Test {
		createTest (TestCreation)
		updateTest (TestCreation)
		deleteTest (TestId)
	}
}

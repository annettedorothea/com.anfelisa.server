com.anfelisa.course

target JAVA

ACE {
	GET LoadPublicCourses uses CourseList
	GET LoadPrivateCourses uses MyCourseList
	GET LoadStatistics uses Statistics
	GET GetCourse uses Course
	GET LoadAllCourses uses CourseList

	POST CreateCourse uses CourseCreation {
		on created ( Course.createCourse )
	}
	POST AddStudentToCourse uses StudentToCourseAddition {
		on added ( StudentOfCourse.addStudentToCourse)
	}
	PUT UpdateCourse uses Course {
		on updated (Course.updateCourse)
	}
	DELETE DeleteCourse uses CourseId {
		on deleted (Course.deleteCourse)
	}
}

views {
	Course {
		createCourse (CourseCreation)
		updateCourse(Course)
		deleteCourse(CourseId)
	}
	StudentOfCourse {
		addStudentToCourse (StudentToCourseAddition)
	}
}

models {
	schema public
	persistent Course {
		Unique PrimaryKey NotNull String courseId
		NotNull String name
		String description
		Integer sequence
		NotNull String author references com.anfelisa.user.User.username
	}

	persistent StudentOfCourse {
		NotNull String username references com.anfelisa.user.User.username
		NotNull String courseId references Course.courseId
	} 

	CourseAbstract {
		NotNull String courseName
		String courseDescription
		NotNull String courseAuthor
		NotNull String courseId
	} 

	MyCourse {
		NotNull String courseId
		NotNull String name
		String description
		Integer sequence
		NotNull String author
		NotNull Integer openTests
		NotNull Boolean hasOpenTests
	}

	Statistics {
		NotNull String username
		NotNull Integer year
		NotNull Integer month
		NotNull Integer points
		NotNull Integer maxPoints
		NotNull Integer rate
	}

	StatisticsItem {
		NotNull String type
		NotNull Boolean isBox
		NotNull Integer count
		NotNull Integer day
		NotNull String name
		NotNull Integer points
		NotNull Integer maxPoints
		NotNull Integer rate
	} 
		
	CourseId {
		NotNull String courseId
	}

		
	CourseList {
		List Course courseList
	}
		
	MyCourseList {
		List MyCourse myCourseList
	}
		
	StatisticsItemList {
		List StatisticsItem statisticsItemList
	}
}

data {
	CourseCreation : ( Course )
	StudentToCourseAddition : (StudentOfCourse com.anfelisa.user.Credentials)
	CourseList: (CourseList)
	MyCourseList: (MyCourseList com.anfelisa.user.Username)
	Statistics: ( Statistics StatisticsItemList )
	Course : (Course)
	CourseId : (CourseId)
}

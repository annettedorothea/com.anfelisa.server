/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




package com.anfelisa.box;

import io.dropwizard.setup.Environment;
import de.acegen.PersistenceConnection;
import de.acegen.CustomAppConfiguration;
import de.acegen.IDaoProvider;
import de.acegen.ViewProvider;
import de.acegen.Data;

import com.anfelisa.box.resources.*;

@SuppressWarnings("all")
public class AppRegistration {

	public static void registerResources(Environment environment, PersistenceConnection persistenceConnection, CustomAppConfiguration appConfiguration, 
			IDaoProvider daoProvider, ViewProvider viewProvider) {
		environment.jersey().register(new CreateBoxResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new CreateReverseBoxResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new ArchiveBoxResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new UpdateBoxResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new GetBoxSettingsResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new ScheduleCardsResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new SortCardsOutResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new ScoreCardResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new ScoreReinforceCardResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new InitMyBoxesForDayResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new GetBoxesResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new GetBoxStatisticsResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new LoadNextCardResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new DeleteBoxResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new LoadAllActiveCardsResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
	}
	
	public static void registerConsumers(Environment environment, ViewProvider viewProvider) {
		viewProvider.addConsumer("com.anfelisa.box.events.CreateBoxOkEvent", (data, handle) -> {
			viewProvider.rootCategoryView.insert((Data<com.anfelisa.box.models.BoxCreationModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.CreateBoxOkEvent", (data, handle) -> {
			viewProvider.userAccessToCategoryView.grantAccess((Data<com.anfelisa.box.models.BoxCreationModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.CreateBoxOkEvent", (data, handle) -> {
			viewProvider.boxView.createBox((Data<com.anfelisa.box.models.BoxCreationModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.CreateReverseBoxOkEvent", (data, handle) -> {
			viewProvider.boxView.createBox((Data<com.anfelisa.box.models.BoxCreationModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.ArchiveBoxOkEvent", (data, handle) -> {
			viewProvider.boxView.archiveBox((Data<com.anfelisa.box.models.BoxArchiveModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.UpdateBoxCanEditCategoryEvent", (data, handle) -> {
			viewProvider.rootCategoryView.update((Data<com.anfelisa.box.models.BoxUpdateModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.UpdateBoxOkEvent", (data, handle) -> {
			viewProvider.boxView.updateBox((Data<com.anfelisa.box.models.BoxUpdateModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.ScheduleCardsOkEvent", (data, handle) -> {
			viewProvider.boxView.scheduleCards((Data<com.anfelisa.box.models.ScheduledCardsModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.ScheduleCardsOkEvent", (data, handle) -> {
			viewProvider.reinforceCardView.deleteAllOfBox((Data<com.anfelisa.box.models.ScheduledCardsModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.SortCardsOutOkEvent", (data, handle) -> {
			viewProvider.boxView.sortCardsOut((Data<com.anfelisa.box.models.SortCardsOutModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.SortCardsOutOkEvent", (data, handle) -> {
			viewProvider.reinforceCardView.sortOut((Data<com.anfelisa.box.models.SortCardsOutModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.ScoreCardScoreEvent", (data, handle) -> {
			viewProvider.scheduledCardView.score((Data<com.anfelisa.box.models.ScoreCardModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.ScoreCardScoreEvent", (data, handle) -> {
			viewProvider.scheduledCardView.scheduleNext((Data<com.anfelisa.box.models.ScoreCardModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.ScoreCardReinforceEvent", (data, handle) -> {
			viewProvider.reinforceCardView.add((Data<com.anfelisa.box.models.ScoreCardModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.ScoreReinforceCardKeepEvent", (data, handle) -> {
			viewProvider.reinforceCardView.update((Data<com.anfelisa.box.models.ScoreReinforceCardModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.ScoreReinforceCardRemoveEvent", (data, handle) -> {
			viewProvider.reinforceCardView.remove((Data<com.anfelisa.box.models.ScoreReinforceCardModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.InitMyBoxesForDayOkEvent", (data, handle) -> {
			viewProvider.scheduledCardView.postponeCards((Data<com.anfelisa.box.models.InitMyBoxesDataModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.InitMyBoxesForDayOkEvent", (data, handle) -> {
			viewProvider.reinforceCardView.clear((Data<com.anfelisa.box.models.InitMyBoxesDataModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.DeleteBoxDeleteBoxEvent", (data, handle) -> {
			viewProvider.scheduledCardView.deleteAll((Data<com.anfelisa.box.models.DeleteBoxModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.DeleteBoxDeleteBoxEvent", (data, handle) -> {
			viewProvider.reinforceCardView.deleteAll((Data<com.anfelisa.box.models.DeleteBoxModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.DeleteBoxDeleteBoxEvent", (data, handle) -> {
			viewProvider.boxView.deleteBox((Data<com.anfelisa.box.models.DeleteBoxModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.DeleteBoxDeleteCategoryEvent", (data, handle) -> {
			viewProvider.rootCategoryView.deleteAll((Data<com.anfelisa.box.models.DeleteBoxModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.DeleteBoxDeleteCategoryEvent", (data, handle) -> {
			viewProvider.userAccessToCategoryView.delete((Data<com.anfelisa.box.models.DeleteBoxModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.DeleteBoxDeleteUserAccessToCategoryEvent", (data, handle) -> {
			viewProvider.userAccessToCategoryView.delete((Data<com.anfelisa.box.models.DeleteBoxModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.box.events.DeleteBoxDeleteReverseBoxEvent", (data, handle) -> {
			viewProvider.boxView.deleteReverseBox((Data<com.anfelisa.box.models.DeleteBoxModel>) data, handle);
		});
		
		
	}
}



/******* S.D.G. *******/




/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




package com.anfelisa.category.events;

import de.acegen.IEvent;
import de.acegen.Event;
import de.acegen.ViewProvider;
import com.anfelisa.category.data.*;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import de.acegen.IDataContainer;
import de.acegen.PersistenceHandle;

import java.io.IOException;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings("all")
public class EventReplayService {
	
	private static ObjectMapper mapper = new ObjectMapper();
	private static final Logger LOG = LoggerFactory.getLogger(EventReplayService.class);

	static {
		mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
	}

	public static void replayEvent(String eventClass, String json, PersistenceHandle handle, ViewProvider viewProvider) {
		try {
			if (eventClass.equals("com.anfelisa.category.events.CreateCategoryOkEvent")) {
				CategoryCreationData data = mapper.readValue(json, CategoryCreationData.class);
				data.migrateLegacyData(json);
				Event event = new Event<CategoryCreationData>("com.anfelisa.category.events.CreateCategoryOkEvent", viewProvider);
				event.notifyListeners(data, handle);
				event.notifyAfterCommitListeners(data, handle);
			}
			if (eventClass.equals("com.anfelisa.category.events.UpdateCategoryOkEvent")) {
				CategoryUpdateData data = mapper.readValue(json, CategoryUpdateData.class);
				data.migrateLegacyData(json);
				Event event = new Event<CategoryUpdateData>("com.anfelisa.category.events.UpdateCategoryOkEvent", viewProvider);
				event.notifyListeners(data, handle);
				event.notifyAfterCommitListeners(data, handle);
			}
			if (eventClass.equals("com.anfelisa.category.events.DeleteCategoryOkEvent")) {
				CategoryDeleteData data = mapper.readValue(json, CategoryDeleteData.class);
				data.migrateLegacyData(json);
				Event event = new Event<CategoryDeleteData>("com.anfelisa.category.events.DeleteCategoryOkEvent", viewProvider);
				event.notifyListeners(data, handle);
				event.notifyAfterCommitListeners(data, handle);
			}
			if (eventClass.equals("com.anfelisa.category.events.MoveCategoryOkEvent")) {
				CategoryMoveData data = mapper.readValue(json, CategoryMoveData.class);
				data.migrateLegacyData(json);
				Event event = new Event<CategoryMoveData>("com.anfelisa.category.events.MoveCategoryOkEvent", viewProvider);
				event.notifyListeners(data, handle);
				event.notifyAfterCommitListeners(data, handle);
			}
			if (eventClass.equals("com.anfelisa.category.events.ChangeOrderCategoryOkEvent")) {
				CategoryChangeOrderData data = mapper.readValue(json, CategoryChangeOrderData.class);
				data.migrateLegacyData(json);
				Event event = new Event<CategoryChangeOrderData>("com.anfelisa.category.events.ChangeOrderCategoryOkEvent", viewProvider);
				event.notifyListeners(data, handle);
				event.notifyAfterCommitListeners(data, handle);
			}
			if (eventClass.equals("com.anfelisa.category.events.InviteUserToCategoryInsertEvent")) {
				UserToCategoryInvitationData data = mapper.readValue(json, UserToCategoryInvitationData.class);
				data.migrateLegacyData(json);
				Event event = new Event<UserToCategoryInvitationData>("com.anfelisa.category.events.InviteUserToCategoryInsertEvent", viewProvider);
				event.notifyListeners(data, handle);
				event.notifyAfterCommitListeners(data, handle);
			}
			if (eventClass.equals("com.anfelisa.category.events.InviteUserToCategoryUpdateEvent")) {
				UserToCategoryInvitationData data = mapper.readValue(json, UserToCategoryInvitationData.class);
				data.migrateLegacyData(json);
				Event event = new Event<UserToCategoryInvitationData>("com.anfelisa.category.events.InviteUserToCategoryUpdateEvent", viewProvider);
				event.notifyListeners(data, handle);
				event.notifyAfterCommitListeners(data, handle);
			}
		} catch (IOException e) {
			LOG.error("failed to replay event {} with data {}", eventClass, json, e);
		}
	}

}



/******* S.D.G. *******/




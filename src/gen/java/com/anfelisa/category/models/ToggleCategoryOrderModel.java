/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




package com.anfelisa.category.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import de.acegen.DateTimeToStringConverter;
import de.acegen.StringToDateTimeConverter;
import de.acegen.AbstractModel;

@SuppressWarnings("unused")
public class ToggleCategoryOrderModel extends AbstractModel {

	private String categoryId;

	private Boolean down;

	private String userId;

	private com.anfelisa.category.models.CategoryModel updatedCategory1;

	private com.anfelisa.category.models.CategoryModel updatedCategory2;

	
	private Boolean frozen = false;

	public ToggleCategoryOrderModel() {
	}

	public ToggleCategoryOrderModel(
		@JsonProperty("categoryId") String categoryId,
		@JsonProperty("down") Boolean down,
		@JsonProperty("userId") String userId,
		@JsonProperty("updatedCategory1") com.anfelisa.category.models.CategoryModel updatedCategory1,
		@JsonProperty("updatedCategory2") com.anfelisa.category.models.CategoryModel updatedCategory2
	) {
		this.categoryId = categoryId;
		this.down = down;
		this.userId = userId;
		this.updatedCategory1 = updatedCategory1;
		this.updatedCategory2 = updatedCategory2;
	}

	@JsonProperty
	public String getCategoryId() {
		return this.categoryId;
	}
	
	@JsonProperty
	public void setCategoryId(String categoryId) {
		if (this.frozen) {
			throw new RuntimeException("categoryId is frozen");
		}
		this.categoryId = categoryId;
	}
	
	@JsonProperty
	public Boolean getDown() {
		return this.down;
	}
	
	@JsonProperty
	public void setDown(Boolean down) {
		if (this.frozen) {
			throw new RuntimeException("down is frozen");
		}
		this.down = down;
	}
	
	@JsonProperty
	public String getUserId() {
		return this.userId;
	}
	
	@JsonProperty
	public void setUserId(String userId) {
		if (this.frozen) {
			throw new RuntimeException("userId is frozen");
		}
		this.userId = userId;
	}
	
	@JsonProperty
	public com.anfelisa.category.models.CategoryModel getUpdatedCategory1() {
		return this.updatedCategory1;
	}
	
	@JsonProperty
	public void setUpdatedCategory1(com.anfelisa.category.models.CategoryModel updatedCategory1) {
		if (this.frozen) {
			throw new RuntimeException("updatedCategory1 is frozen");
		}
		this.updatedCategory1 = updatedCategory1;
	}
	
	@JsonProperty
	public com.anfelisa.category.models.CategoryModel getUpdatedCategory2() {
		return this.updatedCategory2;
	}
	
	@JsonProperty
	public void setUpdatedCategory2(com.anfelisa.category.models.CategoryModel updatedCategory2) {
		if (this.frozen) {
			throw new RuntimeException("updatedCategory2 is frozen");
		}
		this.updatedCategory2 = updatedCategory2;
	}
	
	
	
	@Override
	public void freeze() {
		this.frozen = true;
		if (this.updatedCategory1 != null) {
			this.updatedCategory1.freeze();
		}
		if (this.updatedCategory2 != null) {
			this.updatedCategory2.freeze();
		}
	}

	public static ToggleCategoryOrderModel generateTestData() {
		java.util.Random random = new java.util.Random();
		ToggleCategoryOrderModel testData = new ToggleCategoryOrderModel();
		testData.setCategoryId(randomString(random));
		testData.setDown(random.nextBoolean());
		testData.setUserId(randomString(random));
		testData.setUpdatedCategory1(com.anfelisa.category.models.CategoryModel.generateTestData());
		testData.setUpdatedCategory2(com.anfelisa.category.models.CategoryModel.generateTestData());
		return testData;
	}
	
	private static String randomString(java.util.Random random) {
		String chars = "aaaaaaabcdeeeeeeeffffghiiiiiiijkllllllmmmmnnnnnnnooooooooopqrstttuuuuuuuvxyz";
		int n = random.nextInt(20) + 5;
		StringBuilder sb = new StringBuilder(n);
		for (int i = 0; i < n; i++) {
			int index = random.nextInt(chars.length());
			sb.append(chars.charAt(index));
		}
		String string  = sb.toString(); 
		return string.substring(0,1).toUpperCase() + string.substring(1).toLowerCase();
	}

}



/******* S.D.G. *******/




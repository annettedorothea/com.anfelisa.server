/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




package com.anfelisa.category.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import java.util.List;
import java.util.ArrayList;

import de.acegen.DateTimeToStringConverter;
import de.acegen.StringToDateTimeConverter;
import de.acegen.AbstractModel;

@SuppressWarnings("all")
public class UserToCategoryInvitationModel extends AbstractModel {

	private String categoryId;

	private String userId;

	private String invitedUsername;

	private String invitedUserId;

	private Boolean editable;

	private com.anfelisa.box.models.BoxModel boxForInvitedUser;

	
	private Boolean frozen = false;

	public UserToCategoryInvitationModel() {
	}

	public UserToCategoryInvitationModel(
		@JsonProperty("categoryId") String categoryId,
		@JsonProperty("userId") String userId,
		@JsonProperty("invitedUsername") String invitedUsername,
		@JsonProperty("invitedUserId") String invitedUserId,
		@JsonProperty("editable") Boolean editable,
		@JsonProperty("boxForInvitedUser") com.anfelisa.box.models.BoxModel boxForInvitedUser
	) {
		this.categoryId = categoryId;
		this.userId = userId;
		this.invitedUsername = invitedUsername;
		this.invitedUserId = invitedUserId;
		this.editable = editable;
		this.boxForInvitedUser = boxForInvitedUser;
	}

	@JsonProperty
	public String getCategoryId() {
		return this.categoryId;
	}
	
	@JsonProperty
	public void setCategoryId(String categoryId) {
		if (this.frozen) {
			throw new RuntimeException("categoryId is frozen");
		}
		this.categoryId = categoryId;
	}
	
	@JsonProperty
	public String getUserId() {
		return this.userId;
	}
	
	@JsonProperty
	public void setUserId(String userId) {
		if (this.frozen) {
			throw new RuntimeException("userId is frozen");
		}
		this.userId = userId;
	}
	
	@JsonProperty
	public String getInvitedUsername() {
		return this.invitedUsername;
	}
	
	@JsonProperty
	public void setInvitedUsername(String invitedUsername) {
		if (this.frozen) {
			throw new RuntimeException("invitedUsername is frozen");
		}
		this.invitedUsername = invitedUsername;
	}
	
	@JsonProperty
	public String getInvitedUserId() {
		return this.invitedUserId;
	}
	
	@JsonProperty
	public void setInvitedUserId(String invitedUserId) {
		if (this.frozen) {
			throw new RuntimeException("invitedUserId is frozen");
		}
		this.invitedUserId = invitedUserId;
	}
	
	@JsonProperty
	public Boolean getEditable() {
		return this.editable;
	}
	
	@JsonProperty
	public void setEditable(Boolean editable) {
		if (this.frozen) {
			throw new RuntimeException("editable is frozen");
		}
		this.editable = editable;
	}
	
	@JsonProperty
	public com.anfelisa.box.models.BoxModel getBoxForInvitedUser() {
		return this.boxForInvitedUser;
	}
	
	@JsonProperty
	public void setBoxForInvitedUser(com.anfelisa.box.models.BoxModel boxForInvitedUser) {
		if (this.frozen) {
			throw new RuntimeException("boxForInvitedUser is frozen");
		}
		this.boxForInvitedUser = boxForInvitedUser;
	}
	
	
	
	@Override
	public void freeze() {
		this.frozen = true;
		if (this.boxForInvitedUser != null) {
			this.boxForInvitedUser.freeze();
		}
	}

	public com.anfelisa.category.models.UserToCategoryInvitationModel deepCopy() {
		com.anfelisa.category.models.UserToCategoryInvitationModel copy = new UserToCategoryInvitationModel();
		copy.setCategoryId(this.getCategoryId());
		copy.setUserId(this.getUserId());
		copy.setInvitedUsername(this.getInvitedUsername());
		copy.setInvitedUserId(this.getInvitedUserId());
		copy.setEditable(this.getEditable());
		if (this.getBoxForInvitedUser() != null) {
			copy.setBoxForInvitedUser(this.getBoxForInvitedUser().deepCopy());
		}
		return copy;
	}
	
	public static UserToCategoryInvitationModel generateTestData() {
		java.util.Random random = new java.util.Random();
		UserToCategoryInvitationModel testData = new UserToCategoryInvitationModel();
		testData.setCategoryId(randomString(random));
		testData.setUserId(randomString(random));
		testData.setInvitedUsername(randomString(random));
		testData.setInvitedUserId(randomString(random));
		testData.setEditable(random.nextBoolean());
		testData.setBoxForInvitedUser(com.anfelisa.box.models.BoxModel.generateTestData());
		return testData;
	}
	
	private static String randomString(java.util.Random random) {
		String chars = "aaaaaaabcdeeeeeeeffffghiiiiiiijkllllllmmmmnnnnnnnooooooooopqrstttuuuuuuuvxyz";
		int n = random.nextInt(20) + 5;
		StringBuilder sb = new StringBuilder(n);
		for (int i = 0; i < n; i++) {
			int index = random.nextInt(chars.length());
			sb.append(chars.charAt(index));
		}
		String string  = sb.toString(); 
		return string.substring(0,1).toUpperCase() + string.substring(1).toLowerCase();
	}

}



/******* S.D.G. *******/




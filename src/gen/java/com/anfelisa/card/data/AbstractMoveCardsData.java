/********************************************************************************
 * generated by de.acegen 1.6.4
 ********************************************************************************/




package com.anfelisa.card.data;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import java.time.LocalDateTime;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.ArrayList;
import com.anfelisa.card.models.IMoveCardsModel;

import de.acegen.AbstractData;
import de.acegen.IDataContainer;
import de.acegen.DateTimeToStringConverter;
import de.acegen.StringToDateTimeConverter;

@SuppressWarnings("unused")
public abstract class AbstractMoveCardsData extends AbstractData implements IMoveCardsData {
	
	static final Logger LOG = LoggerFactory.getLogger(AbstractMoveCardsData.class);
	
	private java.util.List<String> cardIdList;
	
	private String categoryId;
	
	private String userId;
	
	private java.util.List<com.anfelisa.card.models.ICardModel> movedCards;
	
	private java.util.List<com.anfelisa.card.models.ICardModel> updatedIndices;
	

	public AbstractMoveCardsData(
		@JsonProperty("cardIdList") java.util.List<String> cardIdList,
		@JsonProperty("categoryId") String categoryId,
		@JsonProperty("userId") String userId,
		@JsonProperty("movedCards") java.util.List<com.anfelisa.card.models.ICardModel> movedCards,
		@JsonProperty("updatedIndices") java.util.List<com.anfelisa.card.models.ICardModel> updatedIndices
,		@JsonProperty("uuid") String uuid
	) {
		super(uuid);
		this.cardIdList = cardIdList;
		this.categoryId = categoryId;
		this.userId = userId;
		this.movedCards = movedCards;
		this.updatedIndices = updatedIndices;
	}

	public AbstractMoveCardsData( String uuid ) {
		super(uuid);
	}

	@JsonProperty
	public java.util.List<String> getCardIdList() {
		return this.cardIdList;
	}
	public void setCardIdList(java.util.List<String> cardIdList) {
		this.cardIdList = cardIdList;
	}
	public IMoveCardsData withCardIdList(java.util.List<String> cardIdList) {
		this.cardIdList = cardIdList;
		return this;
	}
	
	@JsonProperty
	public String getCategoryId() {
		return this.categoryId;
	}
	public void setCategoryId(String categoryId) {
		this.categoryId = categoryId;
	}
	public IMoveCardsData withCategoryId(String categoryId) {
		this.categoryId = categoryId;
		return this;
	}
	
	@JsonProperty
	public String getUserId() {
		return this.userId;
	}
	public void setUserId(String userId) {
		this.userId = userId;
	}
	public IMoveCardsData withUserId(String userId) {
		this.userId = userId;
		return this;
	}
	
	@JsonProperty
	public java.util.List<com.anfelisa.card.models.ICardModel> getMovedCards() {
		return this.movedCards;
	}
	public void setMovedCards(java.util.List<com.anfelisa.card.models.ICardModel> movedCards) {
		this.movedCards = movedCards;
	}
	public IMoveCardsData withMovedCards(java.util.List<com.anfelisa.card.models.ICardModel> movedCards) {
		this.movedCards = movedCards;
		return this;
	}
	
	@JsonProperty
	public java.util.List<com.anfelisa.card.models.ICardModel> getUpdatedIndices() {
		return this.updatedIndices;
	}
	public void setUpdatedIndices(java.util.List<com.anfelisa.card.models.ICardModel> updatedIndices) {
		this.updatedIndices = updatedIndices;
	}
	public IMoveCardsData withUpdatedIndices(java.util.List<com.anfelisa.card.models.ICardModel> updatedIndices) {
		this.updatedIndices = updatedIndices;
		return this;
	}
	
	
	
	public IMoveCardsData deepCopy() {
		IMoveCardsData copy = new MoveCardsData(this.getUuid());
		List<String> cardIdListCopy = new ArrayList<String>();
		for(String item: this.getCardIdList()) {
			cardIdListCopy.add(item);
		}
		copy.setCardIdList(cardIdListCopy);
		copy.setCategoryId(this.getCategoryId());
		copy.setUserId(this.getUserId());
		List<com.anfelisa.card.models.ICardModel> movedCardsCopy = new ArrayList<com.anfelisa.card.models.ICardModel>();
		for(com.anfelisa.card.models.ICardModel item: this.getMovedCards()) {
			movedCardsCopy.add(item.deepCopy());
		}
		copy.setMovedCards(movedCardsCopy);
		List<com.anfelisa.card.models.ICardModel> updatedIndicesCopy = new ArrayList<com.anfelisa.card.models.ICardModel>();
		for(com.anfelisa.card.models.ICardModel item: this.getUpdatedIndices()) {
			updatedIndicesCopy.add(item.deepCopy());
		}
		copy.setUpdatedIndices(updatedIndicesCopy);
		copy.setSystemTime(this.getSystemTime());
		return copy;
	}

}



/******* S.D.G. *******/




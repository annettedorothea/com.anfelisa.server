/********************************************************************************
 * generated by de.acegen 1.3.0
 ********************************************************************************/




package com.anfelisa.card.data;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import java.time.LocalDateTime;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.ArrayList;
import com.anfelisa.card.models.ICardListModel;

import de.acegen.AbstractData;
import de.acegen.IDataContainer;
import de.acegen.DateTimeToStringConverter;
import de.acegen.StringToDateTimeConverter;

@SuppressWarnings("unused")
public abstract class AbstractCardListData extends AbstractData implements ICardListData {
	
	static final Logger LOG = LoggerFactory.getLogger(AbstractCardListData.class);
	
	private String userId;
	
	private java.util.List<com.anfelisa.card.models.ICardWithInfoModel> cardList;
	
	private String categoryId;
	
	private Boolean filterNonScheduled = false;
	
	private Integer priority;
	
	private Boolean reverse = false;
	

	public AbstractCardListData(
		@JsonProperty("userId") String userId,
		@JsonProperty("cardList") java.util.List<com.anfelisa.card.models.ICardWithInfoModel> cardList,
		@JsonProperty("categoryId") String categoryId,
		@JsonProperty("filterNonScheduled") Boolean filterNonScheduled,
		@JsonProperty("priority") Integer priority,
		@JsonProperty("reverse") Boolean reverse
,		@JsonProperty("uuid") String uuid
	) {
		super(uuid);
		this.userId = userId;
		this.cardList = cardList;
		this.categoryId = categoryId;
		this.filterNonScheduled = filterNonScheduled;
		this.priority = priority;
		this.reverse = reverse;
	}

	public AbstractCardListData( String uuid ) {
		super(uuid);
	}

	@JsonProperty
	public String getUserId() {
		return this.userId;
	}
	public void setUserId(String userId) {
		this.userId = userId;
	}
	public ICardListData withUserId(String userId) {
		this.userId = userId;
		return this;
	}
	
	@JsonProperty
	public java.util.List<com.anfelisa.card.models.ICardWithInfoModel> getCardList() {
		return this.cardList;
	}
	public void setCardList(java.util.List<com.anfelisa.card.models.ICardWithInfoModel> cardList) {
		this.cardList = cardList;
	}
	public ICardListData withCardList(java.util.List<com.anfelisa.card.models.ICardWithInfoModel> cardList) {
		this.cardList = cardList;
		return this;
	}
	
	@JsonProperty
	public String getCategoryId() {
		return this.categoryId;
	}
	public void setCategoryId(String categoryId) {
		this.categoryId = categoryId;
	}
	public ICardListData withCategoryId(String categoryId) {
		this.categoryId = categoryId;
		return this;
	}
	
	@JsonProperty
	public Boolean getFilterNonScheduled() {
		return this.filterNonScheduled;
	}
	public void setFilterNonScheduled(Boolean filterNonScheduled) {
		this.filterNonScheduled = filterNonScheduled;
	}
	public ICardListData withFilterNonScheduled(Boolean filterNonScheduled) {
		this.filterNonScheduled = filterNonScheduled;
		return this;
	}
	
	@JsonProperty
	public Integer getPriority() {
		return this.priority;
	}
	public void setPriority(Integer priority) {
		this.priority = priority;
	}
	public ICardListData withPriority(Integer priority) {
		this.priority = priority;
		return this;
	}
	
	@JsonProperty
	public Boolean getReverse() {
		return this.reverse;
	}
	public void setReverse(Boolean reverse) {
		this.reverse = reverse;
	}
	public ICardListData withReverse(Boolean reverse) {
		this.reverse = reverse;
		return this;
	}
	
	
	
	public ICardListData deepCopy() {
		ICardListData copy = new CardListData(this.getUuid());
		copy.setUserId(this.getUserId());
		List<com.anfelisa.card.models.ICardWithInfoModel> cardListCopy = new ArrayList<com.anfelisa.card.models.ICardWithInfoModel>();
		for(com.anfelisa.card.models.ICardWithInfoModel item: this.getCardList()) {
			cardListCopy.add(item.deepCopy());
		}
		copy.setCardList(cardListCopy);
		copy.setCategoryId(this.getCategoryId());
		copy.setFilterNonScheduled(this.getFilterNonScheduled());
		copy.setPriority(this.getPriority());
		copy.setReverse(this.getReverse());
		copy.setSystemTime(this.getSystemTime());
		return copy;
	}

}



/******* S.D.G. *******/




/********************************************************************************
 * generated by de.acegen 1.5.4
 ********************************************************************************/




package com.anfelisa.card.data;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import java.time.LocalDateTime;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.ArrayList;
import com.anfelisa.card.models.ISimpleCardModel;

import de.acegen.AbstractData;
import de.acegen.IDataContainer;
import de.acegen.DateTimeToStringConverter;
import de.acegen.StringToDateTimeConverter;

@SuppressWarnings("unused")
public abstract class AbstractSimpleCardData extends AbstractData implements ISimpleCardData {
	
	static final Logger LOG = LoggerFactory.getLogger(AbstractSimpleCardData.class);
	
	private String given;
	
	private String wanted;
	
	private String id;
	

	public AbstractSimpleCardData(
		@JsonProperty("given") String given,
		@JsonProperty("wanted") String wanted,
		@JsonProperty("id") String id
,		@JsonProperty("uuid") String uuid
	) {
		super(uuid);
		this.given = given;
		this.wanted = wanted;
		this.id = id;
	}

	public AbstractSimpleCardData( String uuid ) {
		super(uuid);
	}

	@JsonProperty
	public String getGiven() {
		return this.given;
	}
	public void setGiven(String given) {
		this.given = given;
	}
	public ISimpleCardData withGiven(String given) {
		this.given = given;
		return this;
	}
	
	@JsonProperty
	public String getWanted() {
		return this.wanted;
	}
	public void setWanted(String wanted) {
		this.wanted = wanted;
	}
	public ISimpleCardData withWanted(String wanted) {
		this.wanted = wanted;
		return this;
	}
	
	@JsonProperty
	public String getId() {
		return this.id;
	}
	public void setId(String id) {
		this.id = id;
	}
	public ISimpleCardData withId(String id) {
		this.id = id;
		return this;
	}
	
	
	
	public ISimpleCardData deepCopy() {
		ISimpleCardData copy = new SimpleCardData(this.getUuid());
		copy.setGiven(this.getGiven());
		copy.setWanted(this.getWanted());
		copy.setId(this.getId());
		copy.setSystemTime(this.getSystemTime());
		return copy;
	}

}



/******* S.D.G. *******/




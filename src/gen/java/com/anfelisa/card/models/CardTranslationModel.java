/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




package com.anfelisa.card.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import de.acegen.DateTimeToStringConverter;
import de.acegen.StringToDateTimeConverter;
import de.acegen.AbstractModel;

@SuppressWarnings("unused")
public class CardTranslationModel extends AbstractModel {

	private String sourceValue;

	private String targetValue;

	private String sourceLanguage;

	private String targetLanguage;

	
	private Boolean frozen = false;

	public CardTranslationModel() {
	}

	public CardTranslationModel(
		@JsonProperty("sourceValue") String sourceValue,
		@JsonProperty("targetValue") String targetValue,
		@JsonProperty("sourceLanguage") String sourceLanguage,
		@JsonProperty("targetLanguage") String targetLanguage
	) {
		this.sourceValue = sourceValue;
		this.targetValue = targetValue;
		this.sourceLanguage = sourceLanguage;
		this.targetLanguage = targetLanguage;
	}

	@JsonProperty
	public String getSourceValue() {
		return this.sourceValue;
	}
	
	@JsonProperty
	public void setSourceValue(String sourceValue) {
		if (this.frozen) {
			throw new RuntimeException("sourceValue is frozen");
		}
		this.sourceValue = sourceValue;
	}
	
	@JsonProperty
	public String getTargetValue() {
		return this.targetValue;
	}
	
	@JsonProperty
	public void setTargetValue(String targetValue) {
		if (this.frozen) {
			throw new RuntimeException("targetValue is frozen");
		}
		this.targetValue = targetValue;
	}
	
	@JsonProperty
	public String getSourceLanguage() {
		return this.sourceLanguage;
	}
	
	@JsonProperty
	public void setSourceLanguage(String sourceLanguage) {
		if (this.frozen) {
			throw new RuntimeException("sourceLanguage is frozen");
		}
		this.sourceLanguage = sourceLanguage;
	}
	
	@JsonProperty
	public String getTargetLanguage() {
		return this.targetLanguage;
	}
	
	@JsonProperty
	public void setTargetLanguage(String targetLanguage) {
		if (this.frozen) {
			throw new RuntimeException("targetLanguage is frozen");
		}
		this.targetLanguage = targetLanguage;
	}
	
	
	
	@Override
	public void freeze() {
		this.frozen = true;
	}

	public static CardTranslationModel generateTestData() {
		java.util.Random random = new java.util.Random();
		CardTranslationModel testData = new CardTranslationModel();
		testData.setSourceValue(randomString(random));
		testData.setTargetValue(randomString(random));
		testData.setSourceLanguage(randomString(random));
		testData.setTargetLanguage(randomString(random));
		return testData;
	}
	
	private static String randomString(java.util.Random random) {
		String chars = "aaaaaaabcdeeeeeeeffffghiiiiiiijkllllllmmmmnnnnnnnooooooooopqrstttuuuuuuuvxyz";
		int n = random.nextInt(20) + 5;
		StringBuilder sb = new StringBuilder(n);
		for (int i = 0; i < n; i++) {
			int index = random.nextInt(chars.length());
			sb.append(chars.charAt(index));
		}
		String string  = sb.toString(); 
		return string.substring(0,1).toUpperCase() + string.substring(1).toLowerCase();
	}

}



/******* S.D.G. *******/




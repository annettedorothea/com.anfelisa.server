/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




package com.anfelisa.user;

import io.dropwizard.setup.Environment;
import de.acegen.PersistenceConnection;
import de.acegen.CustomAppConfiguration;
import de.acegen.IDaoProvider;
import de.acegen.ViewProvider;
import de.acegen.Data;

import com.anfelisa.user.resources.*;

@SuppressWarnings("all")
public class AppRegistration {

	public static void registerResources(Environment environment, PersistenceConnection persistenceConnection, CustomAppConfiguration appConfiguration, 
			IDaoProvider daoProvider, ViewProvider viewProvider) {
		environment.jersey().register(new RegisterUserResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new GetTokenResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new GetUserInfoResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new UsernameAvailableResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new ConfirmEmailResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new GetUserProfileResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new ForgotPasswordResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new ResetPasswordResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new ChangeUserRoleResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
		environment.jersey().register(new DeleteUserResource(persistenceConnection, appConfiguration, daoProvider, viewProvider));
	}
	
	public static void registerConsumers(Environment environment, ViewProvider viewProvider) {
		viewProvider.addConsumer("com.anfelisa.user.events.RegisterUserOkEvent", (data, handle) -> {
			viewProvider.userView.insertUser((Data<com.anfelisa.user.models.UserRegistrationModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.RegisterUserOkEvent", (data, handle) -> {
			viewProvider.emailConfirmationView.insert((Data<com.anfelisa.user.models.UserRegistrationModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.RegisterUserOkEvent", (data, handle) -> {
			viewProvider.emailView.sendRegistrationEmail((Data<com.anfelisa.user.models.UserRegistrationModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.ConfirmEmailOkEvent", (data, handle) -> {
			viewProvider.userView.confirmEmail((Data<com.anfelisa.user.models.ConfirmEmailModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.ConfirmEmailOkEvent", (data, handle) -> {
			viewProvider.emailConfirmationView.delete((Data<com.anfelisa.user.models.ConfirmEmailModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.ForgotPasswordOkEvent", (data, handle) -> {
			viewProvider.resetPasswordView.insert((Data<com.anfelisa.user.models.ForgotPasswordModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.ForgotPasswordOkEvent", (data, handle) -> {
			viewProvider.emailView.sendForgotPasswordEmail((Data<com.anfelisa.user.models.ForgotPasswordModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.ResetPasswordOkEvent", (data, handle) -> {
			viewProvider.userView.resetPassword((Data<com.anfelisa.user.models.ResetPasswordWithNewPasswordModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.ResetPasswordOkEvent", (data, handle) -> {
			viewProvider.resetPasswordView.delete((Data<com.anfelisa.user.models.ResetPasswordWithNewPasswordModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.ChangeUserRoleOkEvent", (data, handle) -> {
			viewProvider.userView.changeUserRole((Data<com.anfelisa.user.models.ChangeUserRoleModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.DeleteUserOkEvent", (data, handle) -> {
			viewProvider.userRootCategoryView.deleteAll((Data<com.anfelisa.user.models.DeleteUserModel>) data, handle);
		});
		
		viewProvider.addConsumer("com.anfelisa.user.events.DeleteUserOkEvent", (data, handle) -> {
			viewProvider.userView.deleteUser((Data<com.anfelisa.user.models.DeleteUserModel>) data, handle);
		});
		
		
	}
}



/******* S.D.G. *******/




/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




package com.anfelisa.user.data;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

import java.time.LocalDateTime;
import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import java.util.ArrayList;
import com.anfelisa.user.models.IProfileUserModel;
import com.anfelisa.user.models.IUserModel;

import de.acegen.AbstractData;
import de.acegen.IDataContainer;
import de.acegen.DateTimeToStringConverter;
import de.acegen.StringToDateTimeConverter;

@SuppressWarnings("unused")
public abstract class AbstractProfileUserData extends AbstractData implements IProfileUserData {
	
	static final Logger LOG = LoggerFactory.getLogger(AbstractProfileUserData.class);
	
	private Boolean deletable = false;
	
	private String userId;
	
	private String username;
	
	private String password;
	
	private String email;
	
	private String role;
	
	private Boolean emailConfirmed = false;
	

	public AbstractProfileUserData(
		@JsonProperty("deletable") Boolean deletable,
		@JsonProperty("userId") String userId,
		@JsonProperty("username") String username,
		@JsonProperty("password") String password,
		@JsonProperty("email") String email,
		@JsonProperty("role") String role,
		@JsonProperty("emailConfirmed") Boolean emailConfirmed
,		@JsonProperty("uuid") String uuid
	) {
		super(uuid);
		this.deletable = deletable;
		this.userId = userId;
		this.username = username;
		this.password = password;
		this.email = email;
		this.role = role;
		this.emailConfirmed = emailConfirmed;
	}

	public AbstractProfileUserData( String uuid ) {
		super(uuid);
	}

	@JsonProperty
	public Boolean getDeletable() {
		return this.deletable;
	}
	public void setDeletable(Boolean deletable) {
		this.deletable = deletable;
	}
	public IProfileUserData withDeletable(Boolean deletable) {
		this.deletable = deletable;
		return this;
	}
	
	@JsonProperty
	public String getUserId() {
		return this.userId;
	}
	public void setUserId(String userId) {
		this.userId = userId;
	}
	public IProfileUserData withUserId(String userId) {
		this.userId = userId;
		return this;
	}
	
	@JsonProperty
	public String getUsername() {
		return this.username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public IProfileUserData withUsername(String username) {
		this.username = username;
		return this;
	}
	
	@JsonProperty
	public String getPassword() {
		return this.password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public IProfileUserData withPassword(String password) {
		this.password = password;
		return this;
	}
	
	@JsonProperty
	public String getEmail() {
		return this.email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public IProfileUserData withEmail(String email) {
		this.email = email;
		return this;
	}
	
	@JsonProperty
	public String getRole() {
		return this.role;
	}
	public void setRole(String role) {
		this.role = role;
	}
	public IProfileUserData withRole(String role) {
		this.role = role;
		return this;
	}
	
	@JsonProperty
	public Boolean getEmailConfirmed() {
		return this.emailConfirmed;
	}
	public void setEmailConfirmed(Boolean emailConfirmed) {
		this.emailConfirmed = emailConfirmed;
	}
	public IProfileUserData withEmailConfirmed(Boolean emailConfirmed) {
		this.emailConfirmed = emailConfirmed;
		return this;
	}
	
	
	public void mapFrom(com.anfelisa.user.models.IUserModel model) {
		this.userId = model.getUserId();
		this.username = model.getUsername();
		this.password = model.getPassword();
		this.email = model.getEmail();
		this.role = model.getRole();
		this.emailConfirmed = model.getEmailConfirmed();
	}
	
	public IProfileUserData deepCopy() {
		IProfileUserData copy = new ProfileUserData(this.getUuid());
		copy.setDeletable(this.getDeletable());
		copy.setUserId(this.getUserId());
		copy.setUsername(this.getUsername());
		copy.setPassword(this.getPassword());
		copy.setEmail(this.getEmail());
		copy.setRole(this.getRole());
		copy.setEmailConfirmed(this.getEmailConfirmed());
		copy.setSystemTime(this.getSystemTime());
		return copy;
	}

}



/******* S.D.G. *******/




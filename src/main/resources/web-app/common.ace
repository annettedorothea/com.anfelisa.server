common

target ES6

actions {
	Init executes Init
	Route executes Route
	RouteHome executes Route
	Login executes Login
	Logout executes Logout
	SaveResult executes SaveResult
	ReadLastResultId executes ReadLastResultId
	ValidateRequiredField executes ValidateRequiredField
	OpenReallyDeleteDialog executes OpenReallyDeleteDialog
}

commands {
	Init {
		on publicCourses publishes (navigation.UserIsNotLoggedIn InitOK ) triggers ( navigation.ReadPublicCourses )
		on publicLessons publishes (navigation.UserIsNotLoggedIn InitOK ) triggers ( navigation.ReadPublicLessons )
		on publicTests publishes (navigation.UserIsNotLoggedIn InitOK ) triggers ( navigation.ReadPublicTests )
		on publicTest publishes (navigation.UserIsNotLoggedIn InitOK ) triggers ( navigation.ReadPublicTest )
		on privateCourses publishes (navigation.UserIsLoggedIn InitOK ) triggers ( navigation.ReadPrivateCourses navigation.ReadStatistics navigation.ReadBoxes )
		on privateLessons publishes (navigation.UserIsLoggedIn InitOK ) triggers ( navigation.ReadPrivateLessons navigation.ReadBoxes )
		on privateTests publishes (navigation.UserIsLoggedIn InitOK ) triggers ( navigation.ReadPrivateTests navigation.ReadBoxes )
		on privateTest publishes (navigation.UserIsLoggedIn InitOK ) triggers ( navigation.ReadPrivateTest navigation.ReadBoxes ) 
		on result publishes (navigation.UserIsLoggedIn InitOK ) triggers ( navigation.ReadResult navigation.ReadBoxes )
		on box publishes (navigation.UserIsLoggedIn InitOK ) triggers ( navigation.ReadPrivateCourses navigation.ReadBoxes navigation.ReadNextCard )
		on profile publishes (navigation.UserIsLoggedIn InitOK ) triggers ( profile.OpenProfile navigation.ReadPrivateCourses navigation.ReadBoxes )
		on profileCourses publishes (navigation.UserIsLoggedIn InitOK ) triggers ( profile.OpenCourseSelection navigation.ReadPrivateCourses navigation.ReadBoxes )
		on profileBoxCreate publishes(navigation.UserIsLoggedIn InitOK ) triggers ( navigation.ReadPrivateCourses navigation.ReadBoxes profile.OpenBoxCreation )
		on profileBoxEdit publishes(navigation.UserIsLoggedIn InitOK ) triggers ( navigation.ReadPrivateCourses navigation.ReadBoxes profile.LoadBox )
		on profileCourseAdd publishes(navigation.UserIsLoggedIn InitOK ) triggers ( navigation.ReadPrivateCourses navigation.ReadBoxes profile.LoadCourses )
	}
	Route {
		on ok publishes ( UpdateHash ) triggers ( Init )
	}
	Login {
		on ok publishes (UserLoggedIn) triggers ( Route )
		on error publishes ( ServerError ) triggers ( RouteHome )
	}
	Logout {
		on ok publishes (UserLoggedOut) triggers ( Route )
	}
	SaveResult {
		on noCredentials publishes (
			RenderResult
		)
		on resultSaved triggers (
			ReadLastResultId
		)
		on serverError publishes (
			common.ServerError
		)
	}
	ReadLastResultId {
		on resultIdRead triggers (
			common.Route
		)
		on serverError publishes (
			common.ServerError
		)
	}
	ValidateRequiredField {
		on fieldEmpty publishes ( FieldEmpty )
		on fieldNotEmpty publishes ( FieldNotEmpty )
	}
	OpenReallyDeleteDialog {
		on removeCourseFromUser publishes (DisplayRemoveCourseFromUserDialog)
		on deleteBox publishes (DisplayDeleteBoxDialog)
	}
}

events {
	InitOK listenedToBy ( Common.initLanguageInLocalStorage Common.initSchemaInLocalStorage )
	ServerError listenedToBy ( Error.renderServerError )
	Error listenedToBy ( Error.renderError )
	UpdateHash listenedToBy ( Common.updateHash )
	UserLoggedIn listenedToBy ( Common.initUserInLocalStorage )
	UserLoggedOut listenedToBy ( Common.removeUserFromLocalStorage navigation.Boxes.hideBoxes )
	RenderResult listenedToBy ( Test.renderResult )
	FieldEmpty listenedToBy ( Validation.fieldEmpty ) 
	FieldNotEmpty listenedToBy ( Validation.fieldNotEmpty )
	DisplayRemoveCourseFromUserDialog listenedToBy (ReallyDeleteDialog.displayRemoveCourseFromUserDialog)
	DisplayDeleteBoxDialog listenedToBy (ReallyDeleteDialog.displayDeleteBoxDialog)
} 

views {
	Error {
		renderError
		renderServerError
	}
	Common {
		initLanguageInLocalStorage
		initSchemaInLocalStorage
		updateHash
		initUserInLocalStorage
		removeUserFromLocalStorage
	}
	Header {
		renderLogin
		renderLogout
	}
	Test {
		renderResult
	}
	Validation {
		fieldEmpty
		fieldNotEmpty
	}
	ReallyDeleteDialog {
		displayRemoveCourseFromUserDialog
		displayDeleteBoxDialog
	}
}
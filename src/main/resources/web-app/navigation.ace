navigation

target ES6

actions {
	ReadPublicCourses executes ReadPublicCourses
	ReadPublicLessons executes ReadPublicLessons
	ReadPublicTests executes ReadPublicTests
	ReadPublicTest executes ReadPublicTest
	ReadPrivateCourses executes ReadPrivateCourses
	ReadPrivateLessons executes ReadPrivateLessons
	ReadPrivateTests executes ReadPrivateTests
	ReadPrivateTest executes ReadPrivateTest
	ReadResult executes ReadResult
	ReadStatistics executes ReadStatistics
	ReadBoxes executes ReadBoxes
	ReadNextCard executes ReadNextCard
}

commands {
	ReadPublicCourses {
		on ok publishes ( PublicCoursesRead )
		on error publishes ( common.ServerError )
	}
	ReadPublicLessons {
		on ok publishes ( PublicLessonsRead )
		on error publishes ( common.ServerError )
	}
	ReadPublicTests {
		on ok publishes ( PublicTestsRead )
		on error publishes ( common.ServerError )
	}
	ReadPublicTest {
		on ok publishes ( PublicTestRead )
		on error publishes ( common.ServerError )
	}
	ReadPrivateCourses {
		on ok publishes ( PrivateCoursesRead )
		on error publishes ( common.ServerError )
	}
	ReadPrivateLessons {
		on ok publishes ( PrivateLessonsRead )
		on error publishes ( common.ServerError )
	}
	ReadPrivateTests {
		on ok publishes ( PrivateTestsRead )
		on error publishes ( common.ServerError )
	}
	ReadPrivateTest {
		on ok publishes ( PrivateTestRead )
		on error publishes ( common.ServerError )
	}
	ReadResult {
		on ok publishes (ResultRead )
		on error publishes ( common.ServerError )
	}
	ReadStatistics {
		on ok publishes ( StatisticsRead )
		on error publishes ( common.ServerError )
	}
	ReadBoxes {
		on ok publishes ( BoxesRead )
		on error publishes ( common.ServerError )
	}
	ReadNextCard {
		on ok publishes (NextCardRead)
		on error publishes ( common.ServerError )
	}
}

events {
	PublicCoursesRead listenedToBy ( Navigation.renderPublicCourses Content.renderPublicCourses Breadcrumbs.renderPublicCoursesBreadcrumbs common.Header.renderLogin )
	PublicLessonsRead listenedToBy ( Navigation.renderPublicLessons Content.renderPublicLessons Breadcrumbs.renderPublicLessonsBreadcrumbs common.Header.renderLogin )
	PublicTestsRead listenedToBy ( Navigation.renderPublicTests Content.renderPublicTests Breadcrumbs.renderPublicTestsBreadcrumbs common.Header.renderLogin )
	PublicTestRead listenedToBy ( Navigation.renderPublicTest Content.renderPublicTest Breadcrumbs.renderPublicTestsBreadcrumbs common.Header.renderLogin )
	PrivateCoursesRead listenedToBy ( Navigation.renderPrivateCourses Content.renderPrivateCourses Breadcrumbs.renderPrivateCoursesBreadcrumbs common.Header.renderLogout )
	PrivateLessonsRead listenedToBy ( Navigation.renderPrivateLessons Content.renderPrivateLessons Breadcrumbs.renderPrivateLessonsBreadcrumbs common.Header.renderLogout )
	PrivateTestsRead listenedToBy ( Navigation.renderPrivateTests Content.renderPrivateTests Breadcrumbs.renderPrivateTestsBreadcrumbs common.Header.renderLogout )
	PrivateTestRead listenedToBy ( Navigation.renderPrivateTest Content.renderPrivateTest Breadcrumbs.renderPrivateTestsBreadcrumbs common.Header.renderLogout )
	ResultRead listenedToBy ( Navigation.renderPrivateTest Content.renderPrivateTest Breadcrumbs.renderPrivateTestsBreadcrumbs common.Header.renderLogout Content.renderResult )
	StatisticsRead listenedToBy ( Content.renderStatistics )
	BoxesRead listenedToBy ( Boxes.renderBoxes ) 
	NextCardRead listenedToBy (Content.renderCard)
}

views {
	Navigation {
		renderPublicCourses
		renderPublicLessons
		renderPublicTests
		renderPublicTest
		renderPrivateCourses
		renderPrivateLessons
		renderPrivateTests
		renderPrivateTest
	}
	Boxes {
		renderBoxes
		hideBoxes
	}
	Content {
		renderPublicCourses
		renderPublicLessons
		renderPublicTests
		renderPublicTest
		renderPrivateCourses
		renderPrivateLessons
		renderPrivateTests
		renderPrivateTest
		renderResult
		renderStatistics
		renderCard
	}
	Breadcrumbs {
		renderPublicCoursesBreadcrumbs
		renderPublicLessonsBreadcrumbs
		renderPublicTestsBreadcrumbs
		renderPrivateCoursesBreadcrumbs
		renderPrivateLessonsBreadcrumbs
		renderPrivateTestsBreadcrumbs
	}
	
}
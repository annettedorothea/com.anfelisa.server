/********************************************************************************
 * generated by de.acegen 1.2.1
 ********************************************************************************/

package com.anfelisa.box.actions;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.anfelisa.box.models.BoxModel;
import com.anfelisa.box.models.NextCardModel;
import com.anfelisa.box.models.NextCardViewModel;
import com.anfelisa.box.models.TodaysCardsStatusModel;
import com.anfelisa.category.models.CategoryModel;

import de.acegen.CustomAppConfiguration;
import de.acegen.Data;
import de.acegen.IDaoProvider;
import de.acegen.PersistenceConnection;
import de.acegen.PersistenceHandle;
import de.acegen.ViewProvider;

public class LoadNextCardAction extends AbstractLoadNextCardAction {

	static final Logger LOG = LoggerFactory.getLogger(LoadNextCardAction.class);

	public LoadNextCardAction(PersistenceConnection persistenceConnection, CustomAppConfiguration appConfiguration,
			IDaoProvider daoProvider, ViewProvider viewProvider) {
		super(persistenceConnection, appConfiguration, daoProvider, viewProvider);
	}

	@Override
	protected Data<NextCardModel> loadDataForGetRequest(Data<NextCardModel> data, PersistenceHandle readonlyHandle) {
		BoxModel box = daoProvider.getBoxDao().selectByBoxId(readonlyHandle, data.getModel().getBoxId());
		if (box == null) {
			throwIllegalArgumentException("boxDoesNotExist");
		}
		if (!box.getUserId().equals(data.getModel().getUserId())) {
			throwSecurityException();
		}
		CategoryModel category = daoProvider.getCategoryDao().selectByPrimaryKey(readonlyHandle, box.getCategoryId());
		data.getModel().setBoxName(category.getCategoryName());

		NextCardViewModel nextCard = daoProvider.getScheduledCardDao().selectFirstScheduledCard(readonlyHandle,
				data.getModel().getBoxId(), data.getModel().getTodayAtMidnightInUTC());
		if (nextCard == null) {
			nextCard = daoProvider.getReinforceCardDao().selectFirstReinforceCard(readonlyHandle,
					data.getModel().getBoxId());
		}
		if (nextCard != null && box.getReverse()) {
			String given = nextCard.getWanted();
			String wanted = nextCard.getGiven();
			nextCard.setGiven(given);
			nextCard.setWanted(wanted);
		}
		TodaysCardsStatusModel todaysCardsStatus = daoProvider.getBoxDao().todaysCardsStatus(readonlyHandle,
				box.getBoxId(), data.getModel().getTodayAtMidnightInUTC());
		data.getModel().setReverse(box.getReverse());
		data.getModel().setAllTodaysCards(todaysCardsStatus.getAllTodaysCards());
		data.getModel().setOpenTodaysCards(todaysCardsStatus.getOpenTodaysCards());
		data.getModel().setNextCard(nextCard);
		return data;
	}

}

/******* S.D.G. *******/

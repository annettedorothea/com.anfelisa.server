/********************************************************************************
 * generated by de.acegen 1.2.1
 ********************************************************************************/

package com.anfelisa.box.commands;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.anfelisa.box.data.IDeleteBoxData;
import com.anfelisa.box.models.IBoxModel;
import com.anfelisa.box.utils.Deletable;
import com.anfelisa.category.models.IUserAccessToCategoryModel;

import de.acegen.CustomAppConfiguration;
import de.acegen.IDaoProvider;
import de.acegen.PersistenceHandle;
import de.acegen.ViewProvider;

public class DeleteBoxCommand extends AbstractDeleteBoxCommand {

	static final Logger LOG = LoggerFactory.getLogger(DeleteBoxCommand.class);

	public DeleteBoxCommand(IDaoProvider daoProvider, ViewProvider viewProvider,
			CustomAppConfiguration appConfiguration) {
		super(daoProvider, viewProvider, appConfiguration);
	}

	@Override
	protected IDeleteBoxData executeCommand(IDeleteBoxData data, PersistenceHandle readonlyHandle) {
		IBoxModel box = daoProvider.getBoxDao().selectByBoxId(readonlyHandle, data.getBoxId());
		if (box == null) {
			throwIllegalArgumentException("boxDoesNotExist");
		}
		if (!box.getUserId().equals(data.getUserId())) {
			throwSecurityException();
		}
		IUserAccessToCategoryModel access = daoProvider.getUserAccessToCategoryDao()
				.selectByCategoryIdAndUserId(readonlyHandle, box.getCategoryId(), data.getUserId());
		if (access == null) {
			throwSecurityException();
		}
		if (!box.getReverse()) {
			IBoxModel reverseBox = daoProvider.getBoxDao().selectByCategoryIdAndUserId(readonlyHandle,
					box.getCategoryId(), data.getUserId(), true);
			if (reverseBox != null) {
				data.setReverseBoxId(reverseBox.getBoxId());
				this.addDeleteReverseBoxOutcome(data);
			}
		}
		if (!Deletable.isBoxDeletable(daoProvider, readonlyHandle, box, data.getUserId())) {
			throwIllegalArgumentException("cannot delete shared box");
		}
		if (Deletable.onDeleteBoxDeleteCategory(daoProvider, readonlyHandle, box)) {
			this.addDeleteCategoryOutcome(data);
		} else if (!box.getReverse()) {
			this.addDeleteUserAccessToCategoryOutcome(data);
		}
		data.setRootCategoryId(box.getCategoryId());
		this.addDeleteBoxOutcome(data);
		return data;
	}

}

/******* S.D.G. *******/

/********************************************************************************
 * generated by de.acegen 1.1.0
 ********************************************************************************/




package com.anfelisa.box.commands;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.anfelisa.box.data.IBoxCreationData;
import com.anfelisa.box.models.IBoxModel;
import com.anfelisa.category.models.IUserAccessToCategoryModel;

import de.acegen.CustomAppConfiguration;
import de.acegen.IDaoProvider;
import de.acegen.PersistenceHandle;
import de.acegen.ViewProvider;

public class CreateReverseBoxCommand extends AbstractCreateReverseBoxCommand {

	static final Logger LOG = LoggerFactory.getLogger(CreateReverseBoxCommand.class);

	public CreateReverseBoxCommand(IBoxCreationData commandData, IDaoProvider daoProvider, ViewProvider viewProvider, 
			CustomAppConfiguration appConfiguration) {
		super(commandData, daoProvider, viewProvider, appConfiguration);
	}

	@Override
	protected void executeCommand(PersistenceHandle readonlyHandle) {
		IUserAccessToCategoryModel access = this.daoProvider.getUserAccessToCategoryDao()
				.selectByCategoryIdAndUserId(readonlyHandle, commandData.getRootCategoryId(), commandData.getUserId());
		if (access == null) {
			throwSecurityException();
		}
		IBoxModel box = daoProvider.getBoxDao().selectByCategoryIdAndUserId(readonlyHandle, commandData.getRootCategoryId(), commandData.getUserId(), false);
		if (box == null) {
			throwIllegalArgumentException("boxNotFound");
		}

		this.commandData.setCategoryId(box.getCategoryId());
		this.commandData.setMaxInterval(box.getMaxInterval());
		this.commandData.setMaxCardsPerDay(box.getMaxCardsPerDay());
		this.commandData.setReverse(true);
		this.commandData.setBoxId(commandData.getUuid());

		this.addOkOutcome();
	}

}




/******* S.D.G. *******/




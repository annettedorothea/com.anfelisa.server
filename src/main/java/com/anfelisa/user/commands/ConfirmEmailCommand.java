/********************************************************************************
 * generated by de.acegen 1.2.1
 ********************************************************************************/

package com.anfelisa.user.commands;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.anfelisa.user.models.ConfirmEmailModel;
import com.anfelisa.user.models.EmailConfirmationModel;
import com.anfelisa.user.models.UserModel;

import de.acegen.CustomAppConfiguration;
import de.acegen.Data;
import de.acegen.IDaoProvider;
import de.acegen.PersistenceHandle;
import de.acegen.ViewProvider;

public class ConfirmEmailCommand extends AbstractConfirmEmailCommand {

	static final Logger LOG = LoggerFactory.getLogger(ConfirmEmailCommand.class);

	public ConfirmEmailCommand(IDaoProvider daoProvider, ViewProvider viewProvider,
			CustomAppConfiguration appConfiguration) {
		super(daoProvider, viewProvider, appConfiguration);
	}

	@Override
	protected Data<ConfirmEmailModel> executeCommand(Data<ConfirmEmailModel> data, PersistenceHandle readonlyHandle) {
		UserModel user = daoProvider.getUserDao().selectByUsername(readonlyHandle, data.getModel().getUsername());
		if (user == null) {
			throwIllegalArgumentException("userDoesNotExist");
		}
		if (user.getEmailConfirmed()) {
			this.addAlreadyConfirmedOutcome(data);
		} else {
			EmailConfirmationModel emailConfirmation = daoProvider.getEmailConfirmationDao().selectByToken(
					readonlyHandle,
					data.getModel().getToken());
			if (emailConfirmation == null) {
				throwIllegalArgumentException("tokenDoesNotExist");
			}
			if (!user.getUserId().equals(emailConfirmation.getUserId())) {
				throwIllegalArgumentException("tokenDoesNotMatch");
			}
			data.getModel().setUserId(user.getUserId());
			this.addOkOutcome(data);
		}
		return data;
	}

}

/******* S.D.G. *******/

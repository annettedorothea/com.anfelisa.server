/********************************************************************************
 * generated by de.acegen 1.2.1
 ********************************************************************************/




package com.anfelisa.card.commands;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.anfelisa.card.models.CardModel;
import com.anfelisa.card.models.ChangeCardOrderListModel;
import com.anfelisa.category.models.UserAccessToCategoryModel;

import de.acegen.CustomAppConfiguration;
import de.acegen.Data;
import de.acegen.IDaoProvider;
import de.acegen.PersistenceHandle;
import de.acegen.ViewProvider;

public class ChangeOrderCommand extends AbstractChangeOrderCommand {

	static final Logger LOG = LoggerFactory.getLogger(ChangeOrderCommand.class);

	public ChangeOrderCommand(IDaoProvider daoProvider, ViewProvider viewProvider, 
			CustomAppConfiguration appConfiguration) {
		super(daoProvider, viewProvider, appConfiguration);
	}

	@Override
	protected Data<ChangeCardOrderListModel> executeCommand(Data<ChangeCardOrderListModel> data, PersistenceHandle readonlyHandle) {
		CardModel targetCard = daoProvider.getCardDao().selectByCardId(readonlyHandle, data.getModel().getCardId());
		if (targetCard == null) {
			throwIllegalArgumentException("cardDoesNotExist");
		}
		UserAccessToCategoryModel accessToRootCategory = this.daoProvider.getUserAccessToCategoryDao()
				.hasUserAccessTo(readonlyHandle, targetCard.getRootCategoryId(), data.getModel().getUserId());
		if (accessToRootCategory == null || !accessToRootCategory.getEditable()) {
			throwSecurityException();
		}
		for (String cardId : data.getModel().getCardIdList()) {
			CardModel card = daoProvider.getCardDao().selectByCardId(readonlyHandle, cardId);
			if (card == null) {
				throwIllegalArgumentException("cardDoesNotExist");
			}
			accessToRootCategory = this.daoProvider.getUserAccessToCategoryDao()
					.hasUserAccessTo(readonlyHandle, card.getRootCategoryId(), data.getModel().getUserId());
			if (accessToRootCategory == null || !accessToRootCategory.getEditable()) {
				throwSecurityException();
			}
		}
		List<CardModel> cards = daoProvider.getCardDao().selectAll(readonlyHandle, targetCard.getCategoryId());
		int index = 1;
		for (CardModel card : cards) {
			if (card.getCardIndex() < targetCard.getCardIndex()) {
				if (!data.getModel().getCardIdList().contains(card.getCardId())) {
					card.setCardIndex(index);
					index++;
				}
			} else {
				break;
			}
		}
		List<CardModel> movedCards = orderedMovedCards(data.getModel(), cards);
		for (CardModel card : movedCards) {
			card.setCardIndex(index);
			index++;
		}
		for (CardModel card : cards) {
			if (card.getCardIndex() >= targetCard.getCardIndex()) {
				if (!data.getModel().getCardIdList().contains(card.getCardId())) {
					card.setCardIndex(index);
					index++;
				}
			}
		}
		data.getModel().setUpdatedIndices(cards);
		this.addOkOutcome(data);
		return data;
	}

	private List<CardModel> orderedMovedCards(ChangeCardOrderListModel data, List<CardModel> cards) {
		List<CardModel> movedCards = new ArrayList<CardModel>();
		for (CardModel card : cards) {
			if (data.getCardIdList().contains(card.getCardId())) {
				movedCards.add(card);
			}
		}
		return movedCards;
	}

}




/******* S.D.G. *******/




HttpServer Java 

com.anfelisa.category.changeorder

scenarios 

	ChangeOrder
		GIVEN
			com.anfelisa.category.createcategory.CreateFourthCategory
		WHEN
			com.anfelisa.category.ChangeOrderCategory
				{
					movedCategoryId: "cat3-${testId}",
					targetCategoryId: "cat2-${testId}"
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			cat1Remains Category selectBy ( categoryId: "cat1-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat1-${testId}",
				categoryIndex: 1,
				categoryName: "level 1 #1",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat2MovedToThirdIndex Category selectBy ( categoryId: "cat2-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat2-${testId}",
				categoryIndex: 3,
				categoryName: "level 1 #2",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat3MovedToSecondIndex Category selectBy ( categoryId: "cat3-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat3-${testId}",
				categoryIndex: 2,
				categoryName: "level 1 #3",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat4Remains Category selectBy ( categoryId: "cat4-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat4-${testId}",
				categoryIndex: 4,
				categoryName: "level 1 #4",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}

	ChangeOrderFourthToFirst
		GIVEN
			com.anfelisa.category.createcategory.CreateFourthCategory
		WHEN
			com.anfelisa.category.ChangeOrderCategory
				{
					movedCategoryId: "cat4-${testId}",
					targetCategoryId: "cat1-${testId}"
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			cat1AtIndex2 Category selectBy ( categoryId: "cat1-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat1-${testId}",
				categoryIndex: 2,
				categoryName: "level 1 #1",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat2AtIndex3 Category selectBy ( categoryId: "cat2-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat2-${testId}",
				categoryIndex: 3,
				categoryName: "level 1 #2",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat3AtIndex4 Category selectBy ( categoryId: "cat3-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat3-${testId}",
				categoryIndex: 4,
				categoryName: "level 1 #3",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat4AtIndex1 Category selectBy ( categoryId: "cat4-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat4-${testId}",
				categoryIndex: 1,
				categoryName: "level 1 #4",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}

	ChangeOrderFirstToFourth
		GIVEN
			com.anfelisa.category.createcategory.CreateFourthCategory
		WHEN
			com.anfelisa.category.ChangeOrderCategory
				{
					movedCategoryId: "cat1-${testId}",
					targetCategoryId: "cat4-${testId}"
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			cat1AtIndex3 Category selectBy ( categoryId: "cat1-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat1-${testId}",
				categoryIndex: 3,
				categoryName: "level 1 #1",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat2AtIndex1 Category selectBy ( categoryId: "cat2-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat2-${testId}",
				categoryIndex: 1,
				categoryName: "level 1 #2",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat3AtIndex2 Category selectBy ( categoryId: "cat3-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat3-${testId}",
				categoryIndex: 2,
				categoryName: "level 1 #3",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat4AtIndex4 Category selectBy ( categoryId: "cat4-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat4-${testId}",
				categoryIndex: 4,
				categoryName: "level 1 #4",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
		
	ChangeOrderUnauthorized
		GIVEN
			com.anfelisa.category.createcategory.CreateFourthCategory
		WHEN
			com.anfelisa.category.ChangeOrderCategory
				{
					movedCategoryId: "cat1-${testId}",
					targetCategoryId: "cat4-${testId}"
				}
		THEN 401
		persistence
			cat1AtIndex1 Category selectBy ( categoryId: "cat1-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat1-${testId}",
				categoryIndex: 1,
				categoryName: "level 1 #1",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat2AtIndex2 Category selectBy ( categoryId: "cat2-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat2-${testId}",
				categoryIndex: 2,
				categoryName: "level 1 #2",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat3AtIndex3 Category selectBy ( categoryId: "cat3-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat3-${testId}",
				categoryIndex: 3,
				categoryName: "level 1 #3",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat4AtIndex4 Category selectBy ( categoryId: "cat4-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat4-${testId}",
				categoryIndex: 4,
				categoryName: "level 1 #4",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
		
	ChangeOrderTargetCategoryDoesNotExist
		GIVEN
			com.anfelisa.category.createcategory.CreateSecondCategory
		WHEN
			com.anfelisa.category.ChangeOrderCategory
				{
					movedCategoryId: "cat1-${testId}",
					targetCategoryId: "lala"
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			cat1AtIndex1 Category selectBy ( categoryId: "cat1-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat1-${testId}",
				categoryIndex: 1,
				categoryName: "level 1 #1",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat2AtIndex2 Category selectBy ( categoryId: "cat2-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat2-${testId}",
				categoryIndex: 2,
				categoryName: "level 1 #2",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}

	ChangeOrderMovedCategoryDoesNotExist
		GIVEN
			com.anfelisa.category.createcategory.CreateSecondCategory
		WHEN
			com.anfelisa.category.ChangeOrderCategory
				{
					movedCategoryId: "lala",
					targetCategoryId: "cat1-${testId}"
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			cat1AtIndex1 Category selectBy ( categoryId: "cat1-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat1-${testId}",
				categoryIndex: 1,
				categoryName: "level 1 #1",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat2AtIndex2 Category selectBy ( categoryId: "cat2-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat2-${testId}",
				categoryIndex: 2,
				categoryName: "level 1 #2",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}

	ChangeOrderNoAccessToTargetCategory
		GIVEN
			com.anfelisa.category.createcategory.CreateSecondCategory
			com.anfelisa.category.createcategory.CreateCategoryAsAdmin
		WHEN
			com.anfelisa.category.ChangeOrderCategory
				{
					movedCategoryId: "cat1-${testId}",
					targetCategoryId: "adminCat-${testId}"
				}
				authorization "Annette-${testId}" : "password"
		THEN 401
		persistence
			cat1AtIndex1 Category selectBy ( categoryId: "cat1-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat1-${testId}",
				categoryIndex: 1,
				categoryName: "level 1 #1",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat2AtIndex2 Category selectBy ( categoryId: "cat2-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat2-${testId}",
				categoryIndex: 2,
				categoryName: "level 1 #2",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			adminCatAtIndex1 Category selectBy ( categoryId: "adminCat-${testId}" ) shouldBe 
			{
				categoryAuthor: "Admin",
				categoryId: "adminCat-${testId}",
				categoryIndex: 1,
				categoryName: "c",
				dictionaryLookup: false,
				parentCategoryId: "adminBox-${testId}",
				rootCategoryId: "adminBox-${testId}"
			}

	ChangeOrderNoAccessToMovedCategory
		GIVEN
			com.anfelisa.category.createcategory.CreateSecondCategory
			com.anfelisa.category.createcategory.CreateCategoryAsAdmin
		WHEN
			com.anfelisa.category.ChangeOrderCategory
				{
					movedCategoryId: "adminCat-${testId}",
					targetCategoryId: "cat1-${testId}"
				}
				authorization "Annette-${testId}" : "password"
		THEN 401
		persistence
			cat1AtIndex1 Category selectBy ( categoryId: "cat1-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat1-${testId}",
				categoryIndex: 1,
				categoryName: "level 1 #1",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat2AtIndex2 Category selectBy ( categoryId: "cat2-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat2-${testId}",
				categoryIndex: 2,
				categoryName: "level 1 #2",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			adminCatAtIndex1 Category selectBy ( categoryId: "adminCat-${testId}" ) shouldBe 
			{
				categoryAuthor: "Admin",
				categoryId: "adminCat-${testId}",
				categoryIndex: 1,
				categoryName: "c",
				dictionaryLookup: false,
				parentCategoryId: "adminBox-${testId}",
				rootCategoryId: "adminBox-${testId}"
			}

	ChangeOrderNoEditingAccessToTargetCategory
		GIVEN
			com.anfelisa.category.createcategory.CreateSecondCategory
			com.anfelisa.user.registeruser.RegisterTwoUsers excludeGIVEN
			com.anfelisa.category.inviteusertocategory.InviteUserToCategory excludeGIVEN
		WHEN
			com.anfelisa.category.ChangeOrderCategory
				{
					movedCategoryId: "cat1-${testId}",
					targetCategoryId: "cat2-${testId}"
				}
				authorization "Anne-${testId}" : "pw"
		THEN 401
		persistence
			cat1AtIndex1 Category selectBy ( categoryId: "cat1-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat1-${testId}",
				categoryIndex: 1,
				categoryName: "level 1 #1",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat2AtIndex2 Category selectBy ( categoryId: "cat2-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat2-${testId}",
				categoryIndex: 2,
				categoryName: "level 1 #2",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}

	ChangeOrderNoEditingAccessToMovedCategory
		GIVEN
			com.anfelisa.category.createcategory.CreateSecondCategory
			com.anfelisa.user.registeruser.RegisterTwoUsers excludeGIVEN
			com.anfelisa.category.inviteusertocategory.InviteUserToCategory excludeGIVEN
		WHEN
			com.anfelisa.category.ChangeOrderCategory
				{
					movedCategoryId: "cat1-${testId}",
					targetCategoryId: "cat2-${testId}"
				}
				authorization "Anne-${testId}" : "pw"
		THEN 401
		persistence
			cat1AtIndex1 Category selectBy ( categoryId: "cat1-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat1-${testId}",
				categoryIndex: 1,
				categoryName: "level 1 #1",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}
			cat2AtIndex2 Category selectBy ( categoryId: "cat2-${testId}" ) shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "cat2-${testId}",
				categoryIndex: 2,
				categoryName: "level 1 #2",
				dictionaryLookup: false,
				parentCategoryId: "boxId-${testId}",
				rootCategoryId: "boxId-${testId}"
			}



		
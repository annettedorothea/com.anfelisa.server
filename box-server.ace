com.anfelisa.box

target JAVA

ACE {
	GET GetBoxes uses BoxList
	GET GetBox uses BoxInfo
	GET GetRootCategories uses CategoryList
	POST CreateBox uses BoxCreation {
		on ok ( Box.createBox )
	}
	PUT UpdateBox uses BoxUpdate {
		on ok ( Box.updateBox )
	}
	PUT PostponeCards uses PostponeCards {
		on ok ( Box.postponeCards )
	}
	DELETE DeleteBox uses DeleteBox {
		on ok (Box.deleteBox)
	}
	
	GET LoadNextCard uses NextCard

	GET LoadReinforceCardList uses ReinforceCardList

	POST ScheduleNextCard uses ScheduleCard {
		on ok (Box.scheduleCard)
		on noCard
	}
	
	POST ScheduleCard uses ScheduleCard {
		on ok (Box.scheduleCard)
	}
	
	POST ScheduleCategory uses ScheduleCategory {
		on ok (Box.scheduleCategory)
	}

	POST ScoreCard uses ScoreCard {
		on scored (ScoredCard.score ScheduledCard.score)
	}
	DELETE RemoveCardFromBox uses RemoveCardFromBox {
		on deleted (ScheduledCard.removeFromBox)
	}
}


views {
	Box {
		createBox (BoxCreation)
		updateBox (BoxCreation)
		deleteBox (DeleteBox)
		postponeCards(PostponeCards)
		scheduleCard(ScheduleCard)
		scheduleCategory(ScheduleCategory)
	}
	ScheduledCard {
		score(ScoreCard)
		removeFromBox(RemoveCardFromBox)
	}
	ScoredCard {
		score(ScoreCard)
	}
}

models {
	schema public
	persistent Box {
		Unique PrimaryKey NotNull String boxId
		NotNull String userId references com.anfelisa.user.User.userId
		NotNull String categoryId references com.anfelisa.category.Category.categoryId
		Integer maxInterval
	}

	persistent ScheduledCard {
		Unique PrimaryKey NotNull String scheduledCardId
		NotNull String cardId references com.anfelisa.card.Card.cardId
		NotNull String boxId references Box.boxId
		NotNull DateTime createdDate
		NotNull Float ef
		Integer interval
		NotNull Integer n
		NotNull Integer count
		NotNull DateTime scheduledDate
		Integer lastQuality
		Integer quality
		DateTime scoredDate
		NotNull Boolean removed
	}

	CategorySelectionList {
		List CategorySelectionItem categoryList
	}
	
	CategorySelectionItem {
		NotNull String categoryId
		NotNull String categoryName
		NotNull Integer categoryIndex
	}
	BoxInfo {
		Integer todaysCards
		Integer totalCards
		Integer myCards
		Integer daysBehindSchedule
		NotNull String boxId
		NotNull String categoryId
		NotNull String categoryName
		NotNull Integer categoryIndex
		Integer maxInterval
	}
	BoxList {
		List BoxInfo boxList
		NotNull String userId
		NotNull DateTime today
	}
	Today {
		NotNull DateTime today
	}
	PostponeCards {
		NotNull String boxId
		NotNull String userId
	}

	BoxUpdate {
		NotNull String userId
		NotNull String boxId
		Integer maxInterval
	}

	DeleteBox {
		NotNull String userId
		NotNull String boxId
	}

	NextCard {
		NotNull String scheduledCardId
		NotNull String cardId
		NotNull String boxId
		NotNull DateTime scheduledDate
		Integer lastQuality
		String given
		String wanted
		String image
		String categoryId
	}
	
	UserId {
		NotNull String userId
	}
	
	BoxId {
		NotNull String boxId
	}
	
	ScheduleCategory {
		NotNull String userId
		NotNull String boxId
		NotNull String categoryId
		List ScheduledCard scheduledCards
	}
}

data {
	CategoryList: (CategorySelectionList)
	BoxList : ( BoxList )
	BoxInfo : ( BoxInfo Today UserId )
	PostponeCards : (PostponeCards Today)
	DeleteBox : (DeleteBox)
	BoxUpdate : ( BoxUpdate )
	BoxCreation : ( Box )
	NextCard : ( NextCard Today UserId)
	ReinforceCardList : ()
	ScoreCard : ()
	RemoveCardFromBox : ()
	ScheduleCard : (ScheduledCard UserId BoxId )
	ScheduleCategory : ( ScheduleCategory Today )
}

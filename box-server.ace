com.anfelisa.box

target JAVA

ACE {
	GET GetBoxes uses BoxList
	GET GetBox uses BoxInfo
	GET GetRootCategories uses CategoryList
	POST CreateBox uses BoxCreation {
		on ok ( Box.createBox )
	}
	PUT UpdateBox uses BoxUpdate {
		on ok ( Box.updateBox )
	}
	PUT PostponeCards uses PostponeCards {
		on ok ( ScheduledCard.postponeCards )
		on noDelay
	}
	DELETE DeleteBox uses DeleteBox {
		on ok (Box.deleteBox)
	}
	
	GET LoadNextCard uses NextCard
	
	GET LoadNextReinforceCard uses NextReinforceCard

	POST ScheduleNextCard uses ScheduleCard {
		on ok (Box.scheduleCard)
		on noCard
	}
	
	POST ScheduleCard uses ScheduleCard {
		on ok (Box.scheduleCard)
	}
	
	POST ScheduleCategory uses ScheduleCategory {
		on ok (Box.scheduleCategory)
	}

	POST ScoreCard uses ScoreCard {
		on score (ScheduledCard.score ScheduledCard.scheduleNext)
		on scoreAndReinforce (ScheduledCard.score ScheduledCard.scheduleNext ReinforceCard.add)
	}
	POST ScoreReinforceCard uses ScoreReinforceCard {
		on remove (ReinforceCard.remove)
		on keep (ReinforceCard.update)
	}
	
}


views {
	Box {
		createBox (BoxCreation)
		updateBox (BoxCreation)
		deleteBox (DeleteBox)
		scheduleCard(ScheduleCard)
		scheduleCategory(ScheduleCategory)
	}
	ScheduledCard {
		score(ScoreCard)
		scheduleNext(ScoreCard)
		postponeCards(PostponeCards)
	}
	ReinforceCard {
		add(ScoreCard)
		remove(ScoreReinforceCard)
		update(ScoreReinforceCard)
	}
}

models {
	schema public
	persistent Box {
		Unique PrimaryKey NotNull String boxId
		NotNull String userId references com.anfelisa.user.User.userId
		NotNull String categoryId references com.anfelisa.category.Category.categoryId
		Integer maxInterval
	}

	persistent ScheduledCard {
		Unique PrimaryKey NotNull String scheduledCardId
		NotNull String cardId references com.anfelisa.card.Card.cardId
		NotNull String boxId references Box.boxId
		NotNull DateTime createdDate
		NotNull Float ef
		Integer interval
		NotNull Integer n
		NotNull Integer count
		NotNull DateTime scheduledDate
		Integer lastQuality
		Integer quality
		DateTime scoredDate
	}

	persistent ReinforceCard {
		Unique PrimaryKey NotNull String reinforceCardId
		Unique PrimaryKey NotNull String scheduledCardId references ScheduledCard.scheduledCardId
		NotNull String boxId references Box.boxId
		NotNull DateTime changeDate
	}

	CategorySelectionList {
		List CategorySelectionItem categoryList
	}
	
	CategorySelectionItem {
		NotNull String categoryId
		NotNull String categoryName
		NotNull Integer categoryIndex
	}
	BoxInfo {
		Integer todaysCards
		Integer totalCards
		Integer myCards
		Integer daysBehindSchedule
		NotNull String boxId
		NotNull String categoryId
		NotNull String categoryName
		NotNull Integer categoryIndex
		Integer maxInterval
	}
	BoxList {
		List BoxInfo boxList
		NotNull String userId
		NotNull DateTime today
	}
	Today {
		NotNull DateTime today
	}
	PostponeCards {
		NotNull String boxId
		NotNull String userId
		NotNull Integer days
	}

	BoxUpdate {
		NotNull String userId
		NotNull String boxId
		Integer maxInterval
	}

	DeleteBox {
		NotNull String userId
		NotNull String boxId
	}

	NextCard {
		NotNull String scheduledCardId
		NotNull String cardId
		NotNull String boxId
		NotNull DateTime scheduledDate
		Integer lastQuality
		String given
		String wanted
		String image
		String categoryId
		NotNull Integer count
		DateTime scoredDate
	}
	
	UserId {
		NotNull String userId
	}
	
	BoxId {
		NotNull String boxId
	}
	
	ScheduleCategory {
		NotNull String userId
		NotNull String boxId
		NotNull String categoryId
		List ScheduledCard scheduledCards
	}
	
	ScoreCard {
		NotNull String cardId
		NotNull String boxId
		
		NotNull String nextScheduledCardScheduledCardId
		NotNull DateTime nextScheduledCardCreatedDate
		NotNull Float nextScheduledCardEf
		Integer nextScheduledCardInterval
		NotNull Integer nextScheduledCardN
		NotNull Integer nextScheduledCardCount
		NotNull DateTime nextScheduledCardScheduledDate
		Integer nextScheduledCardLastQuality
		
		NotNull String scoredCardScheduledCardId
		Integer scoredCardQuality
		DateTime scoredCardScoredDate

		NotNull String reinforceCardId
		NotNull DateTime reinforceCardCreatedDate
	}
	
	NextReinforceCard {
		NotNull String reinforceCardId
		NotNull DateTime changeDate
		Integer lastQuality
		String given
		String wanted
		String image
	}
	ScoreReinforceCard {
		NotNull String reinforceCardId
		NotNull Integer quality
		NotNull DateTime changeDate
	}
}

data {
	CategoryList: (CategorySelectionList)
	BoxList : ( BoxList )
	BoxInfo : ( BoxInfo Today UserId )
	PostponeCards : (PostponeCards Today)
	DeleteBox : (DeleteBox)
	BoxUpdate : ( BoxUpdate )
	BoxCreation : ( Box )
	NextCard : ( NextCard Today UserId)
	ScoreCard : (UserId ScoreCard)
	ScoreReinforceCard : (UserId ScoreReinforceCard)
	NextReinforceCard : (UserId NextReinforceCard BoxId)
	ScheduleCard : (ScheduledCard UserId BoxId )
	ScheduleCategory : ( ScheduleCategory Today )
}

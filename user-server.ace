JAVA 

com.anfelisa.user

Authorization AuthUser {
	String userId
	String username
	String password
	String role
}

ACE 
	GetUserProfile 
		GET "user/get" 
		authorize 
		uses User
	
	UsernameAvailable 
		GET "/users/username" 
		queryParams Username.username
		uses UsernameAvailable
	
	GetRole 
		GET "7"  
		uses Role
		
	GetAllUsers 
		GET "8"  
		uses UserList

	ForgotPassword 
		POST "9"  
		uses ForgotPassword 
		on ok ( ResetPassword.insert Email.sendForgotPasswordEmail)
		on doesNotExist
	
	ResetPassword
		PUT "10"  
		uses ResetPassword 
		on ok (User.resetPassword ResetPassword.delete)
	
	RegisterUser
		POST "11"  
		uses UserRegistration 
		on ok (User.registerUser EmailConfirmation.insert Email.sendRegistrationEmail)
	
	ConfirmEmail
		PUT "12" 
		 uses EmailConfirmation 
		on ok (User.confirmEmail EmailConfirmation.delete)
		on alreadyConfirmed
	
	ChangeUserRole
		PUT "13" 
		authorize  
		uses ChangeUserRole 
		on ok (User.changeUserRole)
	
	DeleteUser 
		DELETE "14"  
		uses DeleteUser 
		on ok (User.deleteUser)
	

views 
	User {
		registerUser(UserRegistration)
		confirmEmail(EmailConfirmation)
		changeUserRole(ChangeUserRole)
		deleteUser(Username)
		resetPassword(ResetPassword)
		
		}
	
	EmailConfirmation { 
		insert(UserRegistration)
		delete(EmailConfirmation)
		
		}
	
	ResetPassword { 
		insert(ForgotPassword)
		delete(ResetPassword)
		
		}
	
	external Email { 
		sendForgotPasswordEmail(ForgotPassword)
		sendRegistrationEmail(UserRegistration)
		
		}
	

models 
	schema public
	
	persistent User {
		Unique PrimaryKey NotNull String userId
		Unique NotNull String username
		NotNull String password
		NotNull String email
		NotNull String role
		NotNull Boolean emailConfirmed
	}

	persistent EmailConfirmation {
		Unique PrimaryKey NotNull String token
		NotNull String userId
	}

	persistent ResetPassword {
		Unique PrimaryKey NotNull String token
		NotNull String userId
	}
	
	Credentials {
		String username
		String role
	} 
	Role {
		String role
	}
	Username {
		NotNull String username
	} 
	UserId {
		NotNull String userId
	} 
	Email {
		NotNull String email
	} 
	Available {
		Boolean available
	}
	DeleteUser {
		NotNull String usernameToBeDeleted
		NotNull String username
		NotNull String role
	}
	Language {
		NotNull String language
	}
	UserList {
		List User userList
	}
	Password {
		String password
	}
	ChangeUserRole {
		NotNull String userId
		NotNull String role
		NotNull String authUserId
		NotNull String authRole
	}

data 
	User : ( User )
	ForgotPassword : (ResetPassword Language Email Username)
	UsernameAvailable : (Username Available)
	UserRegistration : (User Language EmailConfirmation)
	DeleteUser : ( DeleteUser )
	Username : (Username)
	ChangeUserRole : (ChangeUserRole)
	Role : (Credentials)
	UserList : (UserList)
	EmailConfirmation: (EmailConfirmation Username)
	ResetPassword: (ResetPassword Password)


com.anfelisa.user

target JAVA

models {
	persistent User {
		primitiveAttributes {
			Unique PrimaryKey NotNull String username
			NotNull String password
			NotNull String name
			NotNull String prename
			NotNull String email
			NotNull String role
		}
	}

	persistent LoginLog {
		primitiveAttributes {
			Unique PrimaryKey NotNull Serial loginLogId
			NotNull String username
			NotNull DateTime date
		}
	} 

	Credentials {
		primitiveAttributes {
			NotNull String username
			NotNull String role
		}
	} 

	Points {
		primitiveAttributes {
			NotNull Integer points
		}
	} 

	Username {
		primitiveAttributes {
			NotNull String username
		}
	} 
	UsernameAndPassword {
		primitiveAttributes {
			NotNull String username
			NotNull String password
		}
	} 
	UserUpdate {
		primitiveAttributes {
			NotNull String username
			NotNull String name
			NotNull String prename
			NotNull String email
			String language
		}
	}
	CourseSelection {
		primitiveAttributes {
			String language
			List Integer courseIdList
		}
	}
}

data {
	UserCreation : ( User )
	Login : ( LoginLog Credentials )
	Points : ( Points Credentials )
	UserInfo : (User com.anfelisa.course.CourseList com.anfelisa.box.MyBoxList Username)
	UserUpdate : (UserUpdate UsernameAndPassword)
	CourseSelection : (com.anfelisa.course.CourseList Username)
	AddCourses : (CourseSelection UsernameAndPassword)
}

actions {
	POST CreateUser uses UserCreation executes CreateUser 
	POST Login uses Login executes Login
	GET GetPoints uses Points
	GET GetUserInfo uses UserInfo
	PUT UpdateUser uses UserUpdate executes UpdateUser
	GET GetCourseSelection uses CourseSelection
	POST AddCourses uses AddCourses executes AddCourses
}

commands {
	CreateUser uses UserCreation {
		on go publishes (UserCreated)
	}
	Login uses Login {
		on success publishes (UserLoggedIn)
	}
	UpdateUser uses UserUpdate {
		on success publishes ( UserUpdated )
	}
	AddCourses uses AddCourses {
		on success publishes (CoursesAdded)
	}
}

events {
	UserCreated uses UserCreation listenedToBy ( User.createUser	)
	UserLoggedIn uses Login listenedToBy ( LoginLog.userLoggedIn )
	UserUpdated uses UserUpdate listenedToBy (User.updateUser)
	CoursesAdded uses AddCourses listenedToBy (User.addCourses)
}

views {
	User {
		createUser(UserCreation)
		updateUser(UserUpdate)
		addCourses(AddCourses)
	}
	LoginLog {
		userLoggedIn(Login)
	}
}
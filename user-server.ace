com.anfelisa.user

target JAVA

ACE {
	GET GetPoints uses Points
	GET GetUserInfo uses UserInfo
	GET GetCourseSelection uses CourseSelection
	GET UsernameAvailable uses UsernameAvailable

	POST CreateUser uses UserCreation {
		on success (User.createUser)
	}
	POST Login uses Login {
		on success (LoginLog.userLoggedIn)
	}
	PUT UpdateUser uses UserUpdate {
		on success ( User.updateUser )
	}
	POST AddCourses uses AddCourses {
		on success (User.addCourses)
	}
	DELETE RemoveCourse uses RemoveCourse {
		on success (User.removeCourse)
	}
	PUT UpdatePassword uses PasswordUpdate {
		on success (User.updatePassword)
	}
	POST ForgotPassword uses ForgotPassword {
		on ok (Email.sendForgotPasswordEmail)
		on userNotFound 
	}
	POST RegisterUser uses UserRegistration {
		on ok (User.registerUser Email.sendRegistrationEmail)
	}
	PUT ConfirmEmail uses Username {
		on ok (User.confirmEmail)
	}
	PUT ChangeUserToPremium uses ChangeUserRole {
		on ok (User.changeUserToPremium)
	} 
	PUT ChangeUserToAuthor uses ChangeUserRole {
		on ok (User.changeUserToAuthor)
	} 
	PUT ChangeUserToAdmin uses ChangeUserRole {
		on ok (User.changeUserToAdmin)
	} 
}

views {
	User {
		createUser(UserCreation)
		updateUser(UserUpdate)
		addCourses(AddCourses)
		removeCourse(RemoveCourse)
		updatePassword(PasswordUpdate)
		registerUser(UserRegistration)
		confirmEmail(Username)
		changeUserToPremium(ChangeUserRole)
		changeUserToAuthor(ChangeUserRole)
		changeUserToAdmin(ChangeUserRole)
	}
	LoginLog {
		userLoggedIn(Login)
	}
	external Email {
		sendForgotPasswordEmail(ForgotPassword)
		sendRegistrationEmail(UserRegistration)
	}
}

models {
	schema public
	persistent User {
		Unique PrimaryKey NotNull String username
		NotNull String password
		NotNull String email
		NotNull String role
		NotNull Boolean emailConfirmed
	}

	persistent LoginLog {
		Unique PrimaryKey NotNull String loginLogId
		NotNull String username references User.username
		NotNull DateTime date
	} 

	Credentials {
		String credentialsUsername
		String credentialsRole
	} 

	Points {
		NotNull Integer points
	} 

	Username {
		NotNull String username
	} 
	Available {
		Boolean available
	}
	UsernameAndPassword {
		NotNull String username
		NotNull String password
	} 
	UserUpdate {
		NotNull String username
		NotNull String email
	}
	CourseSelection {
		List String courseIdList
	}
	
	CourseId {
		String courseId
	}
	
	ForgotPassword {
		NotNull String username
		NotNull String email
		NotNull String password
	}
	Language {
		NotNull String language
	}
}

data {
	UserCreation : ( User )
	Login : ( LoginLog Username )
	Points : ( Points Username )
	UserInfo : (User com.anfelisa.course.CourseList com.anfelisa.box.MyBoxList Username)
	UserUpdate : (UserUpdate Credentials)
	CourseSelection : (com.anfelisa.course.CourseList Credentials)
	AddCourses : (CourseSelection Credentials)
	RemoveCourse : (CourseId Username)
	PasswordUpdate : (UsernameAndPassword)
	ForgotPassword : (ForgotPassword Language)
	UsernameAvailable : (Username Available)
	UserRegistration : (User Language)
	Username : (Username)
	ChangeUserRole : (Username Credentials)
}


JAVA

com.anfelisa.category

import com.anfelisa.user.AuthUser

ACE 
	CreateCategory<CategoryCreation>
		POST "/category/create"  
		authorize
		payload 
			categoryName
			categoryIndex
			parentCategoryId
			dictionaryLookup
			givenLanguage
			wantedLanguage
		on sub (Category.insert)
		on root (Category.insert UserAccessToCategory.grantAccess)
	
	UpdateCategory<CategoryUpdate>
		PUT "/category/update" 
		authorize
		payload 
			categoryId
			categoryName
			dictionaryLookup
			givenLanguage
			wantedLanguage
		on ok (Category.update)
	
	DeleteCategory<CategoryDelete>
		DELETE "/category/delete"  
		authorize
		queryParams categoryId
		on noRoot (Category.delete)
		on root (Category.deleteRoot)
	
	GetAllCategories<CategoryList>
		GET "/category/all"  
		authorize
		queryParams parentCategoryId
		response categoryList
		
	InviteUser<InviteUser>
		POST "/category/invite" 
		authorize 
		payload 
			categoryId
			invitedUsername
		on ok (UserAccessToCategory.grantAccessInvitation)
		on hasAccess
	
	RevokeUserAccess<RevokeUser>
		DELETE "/category/revoke" 
		authorize
		queryParams 
			revokedUserId 
			categoryId 
		on ok (UserAccessToCategory.revokeAccess)
		on hasNoAccess
	
	GetCategoryTree<CategoryTree>
		GET "/category/tree" 
		authorize 
		response
			categoryList

views 
	Category {
		insert(CategoryCreation)
		delete(CategoryDelete)
		deleteRoot(CategoryDelete)
		update(CategoryUpdate)
	}
	
	UserAccessToCategory { 
		grantAccess(CategoryCreation)
		grantAccessInvitation(InviteUser)
		revokeAccess(RevokeUser)
	}
	

models 
	schema public
	
	persistent Category {
		Unique PrimaryKey NotNull String categoryId
		Unique NotNull String categoryName
		NotNull String categoryAuthor
		NotNull Integer categoryIndex
		String parentCategoryId references categoryId
		String rootCategoryId references categoryId
		Boolean dictionaryLookup
		String givenLanguage
		String wantedLanguage
		NotNull String path
		Boolean publicRootCategory
	}
	
	persistent UserAccessToCategory {
		PrimaryKey NotNull String categoryId references Category.categoryId
		PrimaryKey NotNull String userId references com.anfelisa.user.User.userId
	}
	
	CategoryUpdate {
		NotNull String categoryId
		NotNull String categoryName
		Boolean dictionaryLookup
		String givenLanguage
		String wantedLanguage
		String userId
	}
	
	CategoryDelete {
		NotNull String categoryId
		NotNull Integer categoryIndex
		NotNull String parentCategoryId
		String userId
	}
	
	CategoryList {
		String parentCategoryId
		String grandParentCategoryId
		String parentCategoryName
		Boolean parentDictionaryLookup
		Boolean rootDictionaryLookup
		String parentGivenLanguage
		String parentWantedLanguage
		List CategoryItem categoryList
		List com.anfelisa.card.Card cardList
		Boolean hasBox
		String userId
		Boolean parentEditable
		List UserWithAccess userList
	}
	
	CategoryItem {
		String categoryId
		String categoryName
		String categoryAuthor
		Integer categoryIndex
		String parentCategoryId
		String rootCategoryId
		Boolean dictionaryLookup
		String givenLanguage
		String wantedLanguage
		NotNull String path
		Boolean empty
		Boolean editable
		Boolean hasBox
		Boolean isRoot
		Boolean publicRootCategory
	}
	
	CategoryTree {
		List CategoryTreeRootItem categoryList
		String userId
	}
	
	CategoryTreeItem {
		String categoryId
		String categoryName
		Integer categoryIndex
		Boolean empty
		Boolean editable
		String parentCategoryId
		Boolean dictionaryLookup
		String givenLanguage
		String wantedLanguage
		List CategoryTreeItem childCategories
	}
	
	CategoryTreeRootItem {
		String categoryId
		String categoryName
		Integer categoryIndex
		Boolean empty
		Boolean editable
		Boolean hasBox
		Boolean dictionaryLookup
		String givenLanguage
		String wantedLanguage
		List CategoryTreeItem childCategories
	}
	
	UserWithAccess {
		NotNull String userId
		NotNull String username
	}
	
	InviteUser {
		NotNull String categoryId
		NotNull String rootCategoryId
		NotNull String invitedUserId
		NotNull String invitedUsername
		String userId
	}
	
	RevokeUser {
		NotNull String categoryId
		NotNull String rootCategoryId
		NotNull String revokedUserId
		String userId
	}
	
	CategoryCreation extends Category, UserAccessToCategory {
		String username
	}


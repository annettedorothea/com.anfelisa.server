JAVA

com.anfelisa.category

import com.anfelisa.user.AuthUser

ACE 
	CreateCategory
		POST "/category/create"  
		authorize
		payload 
			Category.categoryName
			Category.categoryIndex
			Category.parentCategoryId
			Category.dictionaryLookup
			Category.givenLanguage
			Category.wantedLanguage
		uses CategoryCreation 
		on sub (Category.insert)
		on root (Category.insert UserAccessToCategory.grantAccess)
	
	UpdateCategory
		PUT "/UpdateCategory" 
		uses CategoryUpdate 
		on ok (Category.update)
	
	DeleteCategory
		DELETE "/DeleteCategory"  
		uses CategoryDelete 
		on noRoot (Category.delete)
		on root (Category.deleteRoot)
	
	GetAllCategories
		GET "/GetAllCategories"  
		uses CategoryList
		
	InviteUser
		POST "/InviteUser"  
		uses InviteUser 
		on ok (UserAccessToCategory.grantAccessInvitation)
		on hasAccess
	
	RevokeUserAccess
		DELETE "/RevokeUserAccess"  
		uses RevokeUser 
		on ok (UserAccessToCategory.revokeAccess)
		on hasNoAccess
	
	GetCategoryTree
		GET "/GetCategoryTree"  
		uses CategoryTree
		
	GetCategoryTreeItem 
		GET "/GetCategoryTreeItem"  uses CategoryTreeItem


views 
	Category {
		insert(CategoryCreation)
		delete(CategoryDelete)
		deleteRoot(CategoryDelete)
		update(CategoryUpdate)
	}
	
	UserAccessToCategory { 
		grantAccess(CategoryCreation)
		grantAccessInvitation(InviteUser)
		revokeAccess(RevokeUser)
	}
	

models 
	schema public
	
	persistent Category {
		Unique PrimaryKey NotNull String categoryId
		Unique NotNull String categoryName
		NotNull String categoryAuthor
		NotNull Integer categoryIndex
		String parentCategoryId references categoryId
		String rootCategoryId references categoryId
		Boolean dictionaryLookup
		String givenLanguage
		String wantedLanguage
		NotNull String path
		Boolean publicRootCategory
	}
	
	persistent UserAccessToCategory {
		PrimaryKey NotNull String categoryId references Category.categoryId
		PrimaryKey NotNull String userId references com.anfelisa.user.User.userId
	}
	
	CategoryUpdate {
		NotNull String categoryId
		NotNull String categoryName
		Boolean dictionaryLookup
		String givenLanguage
		String wantedLanguage
	}
	
	CategoryDelete {
		NotNull String categoryId
		NotNull Integer categoryIndex
		NotNull String parentCategoryId
	}
	
	CategoryList {
		String parentCategoryId
		String grandParentCategoryId
		String parentCategoryName
		Boolean parentDictionaryLookup
		Boolean rootDictionaryLookup
		String parentGivenLanguage
		String parentWantedLanguage
		List CategoryItem categoryList
		List com.anfelisa.card.Card cardList
		Boolean hasBox
		String userId
		Boolean parentEditable
		List UserWithAccess userList
	}
	
	CategoryItem {
		String categoryId
		String categoryName
		String categoryAuthor
		Integer categoryIndex
		String parentCategoryId
		String rootCategoryId
		Boolean dictionaryLookup
		String givenLanguage
		String wantedLanguage
		NotNull String path
		Boolean empty
		Boolean editable
		Boolean hasBox
		Boolean isRoot
		Boolean publicRootCategory
	}
	
	CategoryTree {
		List CategoryTreeRootItem categoryList
	}
	
	CategoryTreeItem {
		String categoryId
		String categoryName
		Integer categoryIndex
		Boolean empty
		Boolean editable
		List CategoryTreeItem childCategories
	}
	
	CategoryTreeRootItem {
		String categoryId
		String categoryName
		Integer categoryIndex
		Boolean empty
		Boolean editable
		Boolean hasBox
		List CategoryTreeItem childCategories
	}
	
	UserWithAccess {
		NotNull String userId
		NotNull String username
	}
	
	InviteUser {
		NotNull String categoryId
		NotNull String rootCategoryId
		NotNull String invitedUserId
		NotNull String username
	}
	
	RevokeUser {
		NotNull String categoryId
		NotNull String rootCategoryId
		NotNull String revokedUserId
	}

data 
	CategoryCreation : ( Category UserAccessToCategory com.anfelisa.user.Username)
	CategoryUpdate : ( CategoryUpdate  com.anfelisa.user.UserId )
	CategoryDelete : ( CategoryDelete com.anfelisa.user.UserId)
	CategoryList : ( CategoryList )
	InviteUser : ( InviteUser com.anfelisa.user.UserId)
	RevokeUser : ( RevokeUser com.anfelisa.user.UserId)
	CategoryTree : ( CategoryTree com.anfelisa.user.UserId)
	CategoryTreeItem : ( CategoryItem com.anfelisa.user.UserId)


HttpServer 

com.anfelisa.card.importcsv

scenarios 
	ImportCsv
		GIVEN
			com.anfelisa.category.createcategory.CreateCategory
		WHEN
			com.anfelisa.card.ImportCsv
				{
					categoryId: "cat1-${testId}",
					previewCsv : [
						{
							given: "g1",
							wanted: "w1",
							id: "1-${testId}"
						},
						{
							given: "g2",
							wanted: "w2",
							id: "2-${testId}"
						},
						{
							given: "g3",
							wanted: "w3",
							id: "3-${testId}"
						}
					]
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			firstCard Card selectByPrimaryKey ( cardId : "1-${testId}" ) shouldBe
			{
				cardAuthor: "Annette-${testId}",
				cardId: "1-${testId}",
				cardIndex: 1,
				categoryId: "cat1-${testId}",
				given: "g1",
				rootCategoryId: "boxId-${testId}",
				wanted: "w1"
			}
			secondCard Card selectByPrimaryKey ( cardId : "2-${testId}" ) shouldBe
			{
				cardAuthor: "Annette-${testId}",
				cardId: "2-${testId}",
				cardIndex: 2,
				categoryId: "cat1-${testId}",
				given: "g2",
				rootCategoryId: "boxId-${testId}",
				wanted: "w2"
			}
			thirdCard Card selectByPrimaryKey ( cardId : "3-${testId}" ) shouldBe
			{
				cardAuthor: "Annette-${testId}",
				cardId: "3-${testId}",
				cardIndex: 3,
				categoryId: "cat1-${testId}",
				given: "g3",
				rootCategoryId: "boxId-${testId}",
				wanted: "w3"
			}

	ImportCsvNotEmpty
		GIVEN
			com.anfelisa.category.createcategory.CreateCategory
			com.anfelisa.card.createcard.CreateCard excludeGIVEN
		WHEN
			com.anfelisa.card.ImportCsv
				{
					categoryId: "cat1-${testId}",
					previewCsv : [
						{
							given: "g1",
							wanted: "w1",
							id: "1-${testId}"
						},
						{
							given: "g2",
							wanted: "w2",
							id: "2-${testId}"
						},
						{
							given: "g3",
							wanted: "w3",
							id: "3-${testId}"
						}
					]
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			firstCard Card selectByPrimaryKey ( cardId : "1-${testId}" ) shouldBe
			{
				cardAuthor: "Annette-${testId}",
				cardId: "1-${testId}",
				cardIndex: 2,
				categoryId: "cat1-${testId}",
				given: "g1",
				rootCategoryId: "boxId-${testId}",
				wanted: "w1"
			}
			secondCard Card selectByPrimaryKey ( cardId : "2-${testId}" ) shouldBe
			{
				cardAuthor: "Annette-${testId}",
				cardId: "2-${testId}",
				cardIndex: 3,
				categoryId: "cat1-${testId}",
				given: "g2",
				rootCategoryId: "boxId-${testId}",
				wanted: "w2"
			}
			thirdCard Card selectByPrimaryKey ( cardId : "3-${testId}" ) shouldBe
			{
				cardAuthor: "Annette-${testId}",
				cardId: "3-${testId}",
				cardIndex: 4,
				categoryId: "cat1-${testId}",
				given: "g3",
				rootCategoryId: "boxId-${testId}",
				wanted: "w3"
			}

	ImportCsvNoAccessToCategory
		GIVEN
			com.anfelisa.category.createcategory.CreateCategory
			com.anfelisa.user.registeruser.RegisterUserAdmin
		WHEN
			com.anfelisa.card.ImportCsv
				{
					categoryId: "cat1-${testId}",
					previewCsv : [
						{
							given: "g1",
							wanted: "w1",
							id: "1-${testId}"
						}
					]
				}
				authorization "Admin" : "admin-password"
		THEN 401
		persistence 
			cardWasNoCreated Card selectBy ( cardId : "1-${testId}" ) shouldBe null

	ImportCsvUnauthorized
		GIVEN
			com.anfelisa.category.createcategory.CreateCategory
		WHEN
			com.anfelisa.card.ImportCsv
				{
					categoryId: "cat1-${testId}",
					previewCsv : [
						{
							given: "g1",
							wanted: "w1",
							id: "1-${testId}"
						}
					]
				}
		THEN 401
		persistence 
			cardWasNoCreated Card selectBy ( cardId : "1-${testId}" ) shouldBe null

	ImportCsvCategoryDoesNotExist
		GIVEN
			com.anfelisa.category.createcategory.CreateCategory
		WHEN
			com.anfelisa.card.ImportCsv
				{
					categoryId: "xx",
					previewCsv : [
						{
							given: "g1",
							wanted: "w1",
							id: "1-${testId}"
						}
					]
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence 
			cardWasNoCreated Card selectBy ( cardId : "1-${testId}" ) shouldBe null


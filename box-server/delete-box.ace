HttpServer Java 

com.anfelisa.box.deletebox

scenarios 
	DeleteBoxCascadesAll
		GIVEN
			com.anfelisa.box.scorecard.ScoreCard0
		WHEN
			com.anfelisa.box.DeleteBox
				{
					boxId: "boxId-${testId}"
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			boxWasDeleted Box selectBy(boxId: "boxId-${testId}") shouldBe null
			accessToCategoryWasDeleted UserAccessToCategory selectByPrimaryKey( categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe null
			allCategoriesWereDeleted Category filterAndCountBy (rootCategoryId: "boxId-${testId}") shouldBe 0
			allCardsWereDeleted Card filterAndCountBy (rootCategoryId:  "boxId-${testId}") shouldBe 0
			allScheduledCardsWereDeleted ScheduledCard filterAndCountBy (boxId: "boxId-${testId}") shouldBe 0
			allReinforceCardsWereDeleted ReinforceCard filterAndCountBy (boxId: "boxId-${testId}") shouldBe 0

	DeleteBoxNotMyBox
		GIVEN
			com.anfelisa.box.scorecard.ScoreCard0
		WHEN
			com.anfelisa.box.DeleteBox
				{
					boxId: "boxId-${testId}"
				}
				authorization "Admin" : "admin-password"
		THEN 401
		persistence
			boxWasNotDeleted Box selectBy(boxId: "boxId-${testId}") shouldBe notNull
			accessToCategoryWasNotDeleted UserAccessToCategory selectByPrimaryKey( categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe notNull
			categoriesWereNotDeleted Category filterAndCountBy (rootCategoryId: "boxId-${testId}") shouldBe 2
			cardsWereNotDeleted Card filterAndCountBy (rootCategoryId:  "boxId-${testId}") shouldBe 5
			scheduledCardsWereNotDeleted ScheduledCard filterAndCountBy (boxId: "boxId-${testId}") shouldBe 4
			reinforceCardsWereNotDeleted ReinforceCard filterAndCountBy (boxId: "boxId-${testId}") shouldBe 1

	DeleteBoxNotMyCategory
		GIVEN
			com.anfelisa.box.scorecard.ScoreCard0
			com.anfelisa.user.registeruser.RegisterTwoUsers excludeGIVEN
			com.anfelisa.category.inviteusertocategory.InviteUserToCategory excludeGIVEN
		WHEN
			com.anfelisa.box.DeleteBox
				{
					boxId: "boxIdOfInvitedUser-${testId}"
				}
				authorization "Anne-${testId}" : "pw"
		THEN 200
		persistence
			boxWasDeleted Box selectBy(boxId: "boxIdOfInvitedUser-${testId}") shouldBe null
			accessToCategoryWasDeleted UserAccessToCategory selectByPrimaryKey( categoryId: "boxIdOfInvitedUser-${testId}", userId: "uuid2-${testId}") shouldBe null
			categoriesWereNotDeleted Category filterAndCountBy (rootCategoryId: "boxId-${testId}") shouldBe 2
			cardsWereNotDeleted Card filterAndCountBy (rootCategoryId:  "boxId-${testId}") shouldBe 5
			allScheduledCardsOfOtherUserWereNotDeleted ScheduledCard filterAndCountBy (boxId: "boxId-${testId}") shouldBe 4
			allReinforceCardsOfOtherUserWereNotDeleted ReinforceCard filterAndCountBy (boxId: "boxId-${testId}") shouldBe 1

	DeleteBoxUnauthorized
		GIVEN
			com.anfelisa.box.scorecard.ScoreCard0
		WHEN
			com.anfelisa.box.DeleteBox
				{
					boxId: "boxId-${testId}"
				}
		THEN 401
		persistence
			boxWasNotDeleted Box selectBy(boxId: "boxId-${testId}") shouldBe notNull
			accessToCategoryWasNotDeleted UserAccessToCategory selectByPrimaryKey( categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe notNull
			categoriesWereNotDeleted Category filterAndCountBy (rootCategoryId: "boxId-${testId}") shouldBe 2
			cardsWereNotDeleted Card filterAndCountBy (rootCategoryId:  "boxId-${testId}") shouldBe 5
			scheduledCardsWereNotDeleted ScheduledCard filterAndCountBy (boxId: "boxId-${testId}") shouldBe 4
			reinforceCardsWereNotDeleted ReinforceCard filterAndCountBy (boxId: "boxId-${testId}") shouldBe 1

	DeleteBoxDoesNotExist
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.DeleteBox
				{
					boxId: "xxx"
				}
				authorization "Annette-${testId}" : "password"
		THEN 400

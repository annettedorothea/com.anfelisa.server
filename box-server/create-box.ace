HttpServer Java 


com.anfelisa.box.createbox

scenarios 
	CreateBoxMinimal
		GIVEN
			com.anfelisa.user.registeruser.RegisterUser
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId-${testId}"
				{
					categoryName: "cat",
					dictionaryLookup: false,
					maxCardsPerDay: 10
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			categoryWasCreated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			accessToCategoryWasGranted UserAccessToCategory selectByPrimaryKey ( categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe
			{
				categoryId: "boxId-${testId}",
				editable: true,
				userId: "uuid-${testId}"
			}
			boxWasCreated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}
			

	CreateSecondBox
		GIVEN
			CreateBoxMinimal
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId2-${testId}"
				{
					categoryName: "cat2-${testId}",
					dictionaryLookup: false,
					maxCardsPerDay: 8
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			categoryWasCreated Category selectBy(categoryId: "boxId2-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId2-${testId}",
				categoryIndex: null,
				categoryName: "cat2-${testId}",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId2-${testId}"
			}
			accessToCategoryWasGranted UserAccessToCategory selectByPrimaryKey ( categoryId: "boxId2-${testId}", userId: "uuid-${testId}") shouldBe
			{
				categoryId: "boxId2-${testId}",
				editable: true,
				userId: "uuid-${testId}"
			}
			boxWasCreated Box selectBy ( boxId: "boxId2-${testId}") shouldBe
			{
				boxId: "boxId2-${testId}",
				categoryId: "boxId2-${testId}",
				maxCardsPerDay: 8,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}

	CreateBoxDictionaryLookupNull
		GIVEN
			com.anfelisa.user.registeruser.RegisterUser
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId-${testId}"
				{
					categoryName: "cat",
					maxCardsPerDay: 10
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			categoryWasCreated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			accessToCategoryWasGranted UserAccessToCategory selectByPrimaryKey ( categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe
			{
				categoryId: "boxId-${testId}",
				editable: true,
				userId: "uuid-${testId}"
			}
			boxWasCreated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}

	CreateBoxDictionaryLookup
		GIVEN
			com.anfelisa.user.registeruser.RegisterUser
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId-${testId}"
				{
					categoryName: "cat",
					maxCardsPerDay: 10,
					dictionaryLookup: true,
					givenLanguage: "de",
					wantedLanguage: "en"
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			categoryWasCreated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: true,
				givenLanguage: "de",
				wantedLanguage: "en",
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			accessToCategoryWasGranted UserAccessToCategory selectByPrimaryKey ( categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe
			{
				categoryId: "boxId-${testId}",
				editable: true,
				userId: "uuid-${testId}"
			}
			boxWasCreated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}
		
	CreateBoxGivenLanguageInvalid
		GIVEN
			com.anfelisa.user.registeruser.RegisterUser
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId-${testId}"
				{
					categoryName: "cat",
					maxCardsPerDay: 10,
					dictionaryLookup: true,
					givenLanguage: "xx",
					wantedLanguage: "en"
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotCreated Category selectBy(categoryId: "boxId-${testId}") shouldBe null
			accessWasNotGranted UserAccessToCategory selectByPrimaryKey (categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe null
			boxWasNotCreated Box selectBy ( boxId: "boxId-${testId}") shouldBe null
		
	CreateBoxWantedLanguageInvalid
		GIVEN
			com.anfelisa.user.registeruser.RegisterUser
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId-${testId}"
				{
					categoryName: "cat",
					maxCardsPerDay: 10,
					dictionaryLookup: true,
					givenLanguage: "fr",
					wantedLanguage: "xx"
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotCreated Category selectBy(categoryId: "boxId-${testId}") shouldBe null
			accessWasNotGranted UserAccessToCategory selectByPrimaryKey (categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe null
			boxWasNotCreated Box selectBy ( boxId: "boxId-${testId}") shouldBe null
		
	CreateBoxMaxCardsPerDayNull
		GIVEN
			com.anfelisa.user.registeruser.RegisterUser
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId-${testId}"
				{
					categoryName: "cat",
					dictionaryLookup: false
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotCreated Category selectBy(categoryId: "boxId-${testId}") shouldBe null
			accessWasNotGranted UserAccessToCategory selectByPrimaryKey (categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe null
			boxWasNotCreated Box selectBy ( boxId: "boxId-${testId}") shouldBe null
		
	CreateBoxCategoryNameNull
		GIVEN
			com.anfelisa.user.registeruser.RegisterUser
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId-${testId}"
				{
					maxCardsPerDay: 10,
					dictionaryLookup: false
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotCreated Category selectBy(categoryId: "boxId-${testId}") shouldBe null
			accessWasNotGranted UserAccessToCategory selectByPrimaryKey (categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe null
			boxWasNotCreated Box selectBy ( boxId: "boxId-${testId}") shouldBe null
		
	CreateBoxCategoryNameEmpty
		GIVEN
			com.anfelisa.user.registeruser.RegisterUser
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId-${testId}"
				{
					categoryName: "",
					maxCardsPerDay: 10,
					dictionaryLookup: false
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotCreated Category selectBy(categoryId: "boxId-${testId}") shouldBe null
			accessWasNotGranted UserAccessToCategory selectByPrimaryKey (categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe null
			boxWasNotCreated Box selectBy ( boxId: "boxId-${testId}") shouldBe null
		
	CreateBoxCategoryNameBlank
		GIVEN
			com.anfelisa.user.registeruser.RegisterUser
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId-${testId}"
				{
					categoryName: "    ",
					maxCardsPerDay: 10,
					dictionaryLookup: false
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotCreated Category selectBy(categoryId: "boxId-${testId}") shouldBe null
			accessWasNotGranted UserAccessToCategory selectByPrimaryKey (categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe null
			boxWasNotCreated Box selectBy ( boxId: "boxId-${testId}") shouldBe null
		
	CreateBoxUnauthorized
		GIVEN
			com.anfelisa.user.registeruser.RegisterUser
		WHEN
			com.anfelisa.box.CreateBox
				uuid "boxId-${testId}"
				{
					categoryName: "lala",
					maxCardsPerDay: 10,
					dictionaryLookup: false
				}
		THEN 401
		persistence
			categoryWasNotCreated Category selectBy(categoryId: "boxId-${testId}") shouldBe null
			accessWasNotGranted UserAccessToCategory selectByPrimaryKey (categoryId: "boxId-${testId}", userId: "uuid-${testId}") shouldBe null
			boxWasNotCreated Box selectBy ( boxId: "boxId-${testId}") shouldBe null
	
	CreateBoxMinimalAsAdmin
		GIVEN
			com.anfelisa.user.registeruser.RegisterUserAdmin
		WHEN
			com.anfelisa.box.CreateBox
				uuid "adminBox-${testId}"
				{
					categoryName: "adminBox-${testId}",
					dictionaryLookup: false,
					maxCardsPerDay: 10
				}
				authorization "Admin" : "admin-password"
		THEN 200
		persistence
			categoryWasCreated Category selectBy(categoryId: "adminBox-${testId}") shouldBe 
			{
				categoryAuthor: "Admin",
				categoryId: "adminBox-${testId}",
				categoryIndex: null,
				categoryName: "adminBox-${testId}",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "adminBox-${testId}"
			}
			accessToCategoryWasGranted UserAccessToCategory selectByPrimaryKey ( categoryId: "adminBox-${testId}", userId: "uuid-admin") shouldBe
			{
				categoryId: "adminBox-${testId}",
				editable: true,
				userId: "uuid-admin"
			}
			boxWasCreated Box selectBy ( boxId: "adminBox-${testId}") shouldBe
			{
				boxId: "adminBox-${testId}",
				categoryId: "adminBox-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-admin",
				reverse: false,
				archived: false
			}


		
		
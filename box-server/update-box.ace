HttpServer Java 

com.anfelisa.box.updatebox

scenarios 
	UpdateBoxMinimal
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "changed",
					dictionaryLookup: false,
					maxCardsPerDay: 11
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			categoryWasUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "changed",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			boxWasUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 11,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}

	InvitedUserCannotChangeNameAndDistionaryLookup
		GIVEN
			com.anfelisa.category.inviteusertocategory.InviteUserToCategory
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxIdOfInvitedUser-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "changed",
					dictionaryLookup: true,
					givenLanguage: "de",
					wantedLanguage: "en",
					maxCardsPerDay: 11
				}
				authorization "Anne-${testId}" : "pw"
		THEN 200
		persistence
			categoryWasNotUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			boxWasUpdated Box selectBy ( boxId: "boxIdOfInvitedUser-${testId}") shouldBe
			{
				boxId: "boxIdOfInvitedUser-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 11,
				userId: "uuid2-${testId}",
				reverse: false,
				archived: false
			}

	UpdateBoxMaxInterval
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "changed",
					dictionaryLookup: false,
					maxCardsPerDay: 11,
					maxInterval: 90
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			categoryWasUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "changed",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			boxWasUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 11,
				userId: "uuid-${testId}",
				maxInterval: 90,
				reverse: false,
				archived: false
			}

	UpdateBoxMaxIntervalSetToNull
		GIVEN
			UpdateBoxMaxInterval
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "changed",
					dictionaryLookup: false,
					maxCardsPerDay: 11,
					maxInterval: null
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			categoryWasUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "changed",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			boxWasUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 11,
				userId: "uuid-${testId}",
				maxInterval: null,
				reverse: false,
				archived: false
			}

	UpdateBoxDictionaryLookupNull
		GIVEN
			com.anfelisa.box.createbox.CreateBoxDictionaryLookup
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "cat",
					maxCardsPerDay: 10
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			categoryWasUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				givenLanguage: null,
				wantedLanguage: null,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}

	UpdateBoxDictionaryLookup
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "cat",
					maxCardsPerDay: 10,
					dictionaryLookup: true,
					givenLanguage: "de",
					wantedLanguage: "en"
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			categoryWasUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: true,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}",
				givenLanguage: "de",
				wantedLanguage: "en"
			}
		
	UpdateBoxGivenLanguageInvalid
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "cat",
					maxCardsPerDay: 10,
					dictionaryLookup: true,
					givenLanguage: "xx",
					wantedLanguage: "en"
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
		
	UpdateBoxWantedLanguageInvalid
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "cat",
					maxCardsPerDay: 10,
					dictionaryLookup: true,
					givenLanguage: "fr",
					wantedLanguage: "xx"
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
		
	UpdateBoxMaxCardsPerDayNull
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "cat"
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			boxWasNotUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}
		
	UpdateBoxSetMaxCardsTo1
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "cat",
					maxCardsPerDay: 1
				}
				authorization "Annette-${testId}" : "password"
		THEN 200
		persistence
			boxWasUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 1,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}
		
	UpdateBoxSetMaxCardsTo0
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "cat",
					maxCardsPerDay: 0
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			boxWasNotUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}
		
	UpdateBoxBoxIdNull
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					categoryId: "boxId-${testId}",
					categoryName: "changed",
					maxCardsPerDay: 10
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
		
	UpdateBoxCategoryIdNull
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryName: "cat",
					maxCardsPerDay: 20
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			boxWasNotUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}
		
		
	UpdateBoxCategoryNameNull
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					maxCardsPerDay: 20
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			boxWasNotUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}
		
	UpdateBoxCategoryNameEmpty
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "",
					maxCardsPerDay: 20
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			boxWasNotUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}
		
	UpdateBoxCategoryNameBlank
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "    ",
					maxCardsPerDay: 20
				}
				authorization "Annette-${testId}" : "password"
		THEN 400
		persistence
			categoryWasNotUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			boxWasNotUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}
		
	UpdateBoxUnauthorized
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "lala",
					maxCardsPerDay: 20
				}
		THEN 401
		persistence
			categoryWasNotUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
				boxWasNotUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}
	
	UpdateBoxNoAccess
		GIVEN
			com.anfelisa.box.createbox.CreateBoxMinimal
			com.anfelisa.user.registeruser.RegisterUserAdmin
		WHEN
			com.anfelisa.box.UpdateBox
				{
					boxId: "boxId-${testId}",
					categoryId: "boxId-${testId}",
					categoryName: "adminBox-${testId}",
					maxCardsPerDay: 20
				}
				authorization "Admin" : "admin-password"
		THEN 401
		persistence
			categoryWasNotUpdated Category selectBy(categoryId: "boxId-${testId}") shouldBe 
			{
				categoryAuthor: "Annette-${testId}",
				categoryId: "boxId-${testId}",
				categoryIndex: null,
				categoryName: "cat",
				dictionaryLookup: false,
				parentCategoryId: null,
				rootCategoryId: "boxId-${testId}"
			}
			boxWasNotUpdated Box selectBy ( boxId: "boxId-${testId}") shouldBe
			{
				boxId: "boxId-${testId}",
				categoryId: "boxId-${testId}",
				maxCardsPerDay: 10,
				userId: "uuid-${testId}",
				reverse: false,
				archived: false
			}


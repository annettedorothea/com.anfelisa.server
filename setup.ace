com.anfelisa.setup

target JAVA

models {
	SchemaCreation {
		primitiveAttributes {
			NotEmpty String schemaToBeCreated
		}
	}
	InitialUser {
		primitiveAttributes {
			NotNull String username
			NotNull String password
			NotNull String name
			NotNull String prename
			NotNull String email
			String role
			Boolean emailConfirmed
		}
	}
}

data {
	SchemaCreation : (SchemaCreation)
	SetupSchema : ( InitialUser com.anfelisa.user.Language)
}

actions {
	POST CreateSchema uses SchemaCreation executes CreateSchema
	POST SetupSchema uses SetupSchema executes SetupSchema
}

commands {
	CreateSchema uses SchemaCreation {
		on setup publishes ( CreateSchema )
	}
	SetupSchema uses SetupSchema {
		on setup publishes ( SetupSchema )
	}
}

events {
	SetupSchema uses SetupSchema listenedToBy (
		Database.createUserTable
		Database.createCourseTable
		Database.createLessonTable
		Database.createTestTable
		Database.createResultTable
		Database.createStudentOfCourseTable
		Database.createCardTable
		Database.createBoxTable
		Database.createCardOfBoxTable
		Database.createBoxOfCourse
		Database.createLoginLog
		Database.insertAdminUser
	)
	CreateSchema uses SchemaCreation listenedToBy (
		Database.createSchema
		Database.createTimelineTable
		Database.createErrorTimelineTable
	)
}

views {
	Database {
		createSchema (SchemaCreation)
		createTimelineTable (SchemaCreation)
		createErrorTimelineTable (SchemaCreation)
		
		createUserTable (SetupSchema)
		createCourseTable (SetupSchema)
		createLessonTable (SetupSchema)
		createTestTable (SetupSchema)
		createResultTable (SetupSchema)
		createStudentOfCourseTable (SetupSchema)
		createBoxTable (SetupSchema)
		createCardTable (SetupSchema)
		createCardOfBoxTable (SetupSchema)
		createBoxOfCourse (SetupSchema)
		createLoginLog (SetupSchema)
		
		insertAdminUser(SetupSchema)
	}
}